"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[lang]/login/page",{

/***/ "(app-pages-browser)/./app/[lang]/cartstorage/cart.tsx":
/*!*****************************************!*\
  !*** ./app/[lang]/cartstorage/cart.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addfbtextraitem: function() { return /* binding */ addfbtextraitem; },\n/* harmony export */   getCart: function() { return /* binding */ getCart; },\n/* harmony export */   getCartCount: function() { return /* binding */ getCartCount; },\n/* harmony export */   getCartItems: function() { return /* binding */ getCartItems; },\n/* harmony export */   getCoupon: function() { return /* binding */ getCoupon; },\n/* harmony export */   getDoorStep: function() { return /* binding */ getDoorStep; },\n/* harmony export */   getDoorStepData: function() { return /* binding */ getDoorStepData; },\n/* harmony export */   getExpressDelivery: function() { return /* binding */ getExpressDelivery; },\n/* harmony export */   getExpressDeliveryCart: function() { return /* binding */ getExpressDeliveryCart; },\n/* harmony export */   getExpressDeliveryData: function() { return /* binding */ getExpressDeliveryData; },\n/* harmony export */   getExtraFees: function() { return /* binding */ getExtraFees; },\n/* harmony export */   getInstallation: function() { return /* binding */ getInstallation; },\n/* harmony export */   getOrderId: function() { return /* binding */ getOrderId; },\n/* harmony export */   getPaymentMethod: function() { return /* binding */ getPaymentMethod; },\n/* harmony export */   getPaymentMethodStatus: function() { return /* binding */ getPaymentMethodStatus; },\n/* harmony export */   getProductids: function() { return /* binding */ getProductids; },\n/* harmony export */   getShippingAddress: function() { return /* binding */ getShippingAddress; },\n/* harmony export */   getSubtotalSale: function() { return /* binding */ getSubtotalSale; },\n/* harmony export */   getSummary: function() { return /* binding */ getSummary; },\n/* harmony export */   getWrapper: function() { return /* binding */ getWrapper; },\n/* harmony export */   increaseQty: function() { return /* binding */ increaseQty; },\n/* harmony export */   proceedToCheckout: function() { return /* binding */ proceedToCheckout; },\n/* harmony export */   recheckcartdata: function() { return /* binding */ recheckcartdata; },\n/* harmony export */   removeCart: function() { return /* binding */ removeCart; },\n/* harmony export */   removeCartItem: function() { return /* binding */ removeCartItem; },\n/* harmony export */   removeCartItemFbt: function() { return /* binding */ removeCartItemFbt; },\n/* harmony export */   removecheckoutdata: function() { return /* binding */ removecheckoutdata; },\n/* harmony export */   setCart: function() { return /* binding */ setCart; },\n/* harmony export */   setCartExpiry: function() { return /* binding */ setCartExpiry; },\n/* harmony export */   setCartItems: function() { return /* binding */ setCartItems; },\n/* harmony export */   setCoupon: function() { return /* binding */ setCoupon; },\n/* harmony export */   setDiscountRule: function() { return /* binding */ setDiscountRule; },\n/* harmony export */   setDiscountRuleBogo: function() { return /* binding */ setDiscountRuleBogo; },\n/* harmony export */   setDoorStep: function() { return /* binding */ setDoorStep; },\n/* harmony export */   setExpressDelivery: function() { return /* binding */ setExpressDelivery; },\n/* harmony export */   setExtraFees: function() { return /* binding */ setExtraFees; },\n/* harmony export */   setInstallation: function() { return /* binding */ setInstallation; },\n/* harmony export */   setPaymentMethod: function() { return /* binding */ setPaymentMethod; },\n/* harmony export */   setShipping: function() { return /* binding */ setShipping; },\n/* harmony export */   setShippingAddress: function() { return /* binding */ setShippingAddress; },\n/* harmony export */   setWrapper: function() { return /* binding */ setWrapper; },\n/* harmony export */   unsetDoorStep: function() { return /* binding */ unsetDoorStep; },\n/* harmony export */   unsetExpressDelivery: function() { return /* binding */ unsetExpressDelivery; },\n/* harmony export */   unsetInstallation: function() { return /* binding */ unsetInstallation; },\n/* harmony export */   unsetWrapper: function() { return /* binding */ unsetWrapper; },\n/* harmony export */   unsetcoupon: function() { return /* binding */ unsetcoupon; },\n/* harmony export */   updateCartItemFbtQty: function() { return /* binding */ updateCartItemFbtQty; }\n/* harmony export */ });\n/* harmony import */ var _api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api/ApiCalls */ \"(app-pages-browser)/./app/[lang]/api/ApiCalls.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/buffer/index.js\")[\"Buffer\"];\n\nconst emptyCart = ()=>({\n        products: [],\n        discounts: {\n            coupon: {},\n            discuountRules: [],\n            additionalDiscount: {}\n        },\n        fees: {\n            shipping: {},\n            express: {},\n            doorstep: {},\n            fee: [],\n            wrapper: {},\n            installation: {}\n        },\n        extradata: false,\n        paymentMethod: \"\",\n        shippingAddress: false,\n        orderId: false\n    });\nconst createCart = (initialValues)=>{\n    return Object.assign(emptyCart(), initialValues);\n};\nconst removecheckoutdata = ()=>{\n    var cartdata = getCart();\n    cartdata.extradata = false;\n    cartdata.paymentMethod = \"\";\n    cartdata.shippingAddress = false;\n    cartdata.discounts.coupon = {};\n    cartdata.fees.express = {};\n    cartdata.fees.doorstep = {};\n    cartdata.fees.wrapper = {};\n    cartdata.fees.installation = {};\n    cartdata.fees.fee = [];\n    for(let index = 0; index < cartdata.products.length; index++){\n        cartdata.products[index].express = false;\n    }\n    setCart(cartdata);\n    return cartdata;\n};\nconst getCartItems = async ()=>{\n    var cartdata;\n    if (localStorage.getItem(\"cartData\")) {\n        var d = localStorage.getItem(\"cartData\");\n        var decodedata = Buffer.from(d, \"base64\").toString(\"utf-8\");\n        cartdata = JSON.parse(decodedata);\n    } else cartdata = createCart({\n        products: []\n    });\n    return cartdata.products;\n};\nconst searchItem = (array, data)=>{\n    return Object.keys(array).find((key)=>array[key].id === data.id && array[key].price === data.price && data.gift.length == array[key].gift.length && array[key].gift.map(function(a) {\n            return a.id;\n        }).filter((element)=>data.gift.map(function(a) {\n                return a.id;\n            }).includes(element)).length == data.gift.length);\n};\nconst removeCart = ()=>{\n    localStorage.removeItem(\"cartData\");\n    return false;\n};\nconst removeCartItem = (key)=>{\n    var cartdata = getCart();\n    cartdata.products.splice(key, 1);\n    setCart(cartdata);\n    setDiscountRule();\n    setDiscountRuleBogo();\n    return cartdata;\n};\nconst removeCartItemFbt = (prokey, fbtkey)=>{\n    var _cartdata_products_prokey_fbt, _cartdata_products_prokey;\n    var cartdata = getCart();\n    (_cartdata_products_prokey = cartdata.products[prokey]) === null || _cartdata_products_prokey === void 0 ? void 0 : (_cartdata_products_prokey_fbt = _cartdata_products_prokey.fbt) === null || _cartdata_products_prokey_fbt === void 0 ? void 0 : _cartdata_products_prokey_fbt.splice(fbtkey, 1);\n    setCart(cartdata);\n    return cartdata;\n};\nconst updateCartItemFbtQty = (qty, prokey, fbtkey)=>{\n    var cartdata = getCart();\n    if (cartdata.products && cartdata.products[prokey] && cartdata.products[prokey].fbt && cartdata.products[prokey].fbt[fbtkey]) {\n        cartdata.products[prokey].fbt[fbtkey].quantity = qty;\n    }\n    setCart(cartdata);\n    return cartdata;\n};\nconst removeBogo = (cartdata)=>{\n    // var cartdata = getCart();\n    // cartdata.products.splice(key,1)\n    for(let index = 0; index < cartdata.products.length; index++){\n        const element = cartdata.products[index];\n        if (element.bogo) {\n            cartdata.products.splice(index, 1);\n        }\n    }\n    // setCart(cartdata)\n    return cartdata;\n};\nconst getCart = ()=>{\n    if (!localStorage.getItem(\"cartexpiry\")) {\n        removeCart();\n    } else {\n        const cartexpiry = localStorage.getItem(\"cartexpiry\");\n        if (Date.now() > cartexpiry) {\n            removeCart();\n            localStorage.removeItem(\"cartexpiry\");\n        }\n    }\n    // removeCart()\n    var cartdata;\n    if (localStorage.getItem(\"cartData\")) {\n        var d = localStorage.getItem(\"cartData\");\n        var decodedata = Buffer.from(d, \"base64\").toString(\"utf-8\");\n        cartdata = JSON.parse(decodedata);\n    } else cartdata = createCart({\n        products: []\n    });\n    return cartdata;\n};\nconst increaseQty = function(cartdata, qty, key) {\n    let setdata = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n    if (cartdata.products[key].total_quantity >= qty) cartdata.products[key].quantity = qty;\n    else cartdata.products[key].quantity = cartdata.products[key].total_quantity;\n    if (cartdata.products[key].gift) {\n        for(let index = 0; index < cartdata.products[key].gift.length; index++){\n            if (cartdata.products[key].total_quantity >= qty) cartdata.products[key].gift[index].quantity = qty;\n            else cartdata.products[key].gift[index].quantity = cartdata.products[key].total_quantity;\n        }\n    }\n    if (setdata) setCart(cartdata);\n    return cartdata;\n};\nconst addBogo = (data, cartdata)=>{\n    // var key = Math.random().toString(16).slice(2)\n    // data.key = key\n    //var cartdata = getCart();\n    // console.log(cartdata.products)\n    cartdata.products = cartdata.products.concat(data);\n    return cartdata;\n};\nconst addfbtextraitem = async (data, fbt)=>{\n    var cartdata = getCart();\n    var checktData = searchItem(cartdata.products, data);\n    if (checktData) {\n        if (fbt.length) {\n            var newfbt = cartdata.products[checktData].fbt.length ? cartdata.products[checktData].fbt : [];\n            if (newfbt.length) {\n                for(let index = 0; index < fbt.length; index++){\n                    const element = fbt[index];\n                    var checktDatafbt = Object.keys(cartdata.products[checktData].fbt).find((key)=>cartdata.products[checktData].fbt[key].id === element.id && cartdata.products[checktData].fbt[key].price === element.price);\n                    if (checktDatafbt) {\n                        if (cartdata.products[checktData].fbt[checktDatafbt].total_quantity >= cartdata.products[checktData].fbt[checktDatafbt].quantity + element.quantity) cartdata.products[checktData].fbt[checktDatafbt].quantity += element.quantity;\n                        else cartdata.products[checktData].fbt[checktDatafbt].quantity = cartdata.products[checktData].fbt[checktDatafbt].total_quantity;\n                    } else {\n                        cartdata.products[checktData].fbt.push(element);\n                    }\n                }\n            } else {\n                cartdata.products[checktData].fbt = fbt;\n            }\n        }\n    }\n    setCart(cartdata);\n};\nconst setCartItems = async (data, gift, fbt)=>{\n    var key = Math.random().toString(16).slice(2);\n    data.key = key;\n    if (gift) {\n        data.gift = gift;\n    } else {\n        data.gift = [];\n    }\n    if (fbt) {\n        data.fbt = fbt;\n    } else {\n        data.fbt = [];\n    }\n    var cartdata = getCart();\n    var checktData = searchItem(cartdata.products, data);\n    if (checktData) {\n        cartdata = increaseQty(cartdata, cartdata.products[checktData].quantity + data.quantity, checktData);\n        if (data.fbt.length) {\n            var newfbt = cartdata.products[checktData].fbt.length ? cartdata.products[checktData].fbt : [];\n            if (newfbt.length) {\n                for(let index = 0; index < data.fbt.length; index++){\n                    const element = data.fbt[index];\n                    var checktDatafbt = Object.keys(cartdata.products[checktData].fbt).find((key)=>cartdata.products[checktData].fbt[key].id === element.id && cartdata.products[checktData].fbt[key].price === element.price);\n                    if (checktDatafbt) {\n                        if (cartdata.products[checktData].fbt[checktDatafbt].total_quantity >= cartdata.products[checktData].fbt[checktDatafbt].quantity + element.quantity) cartdata.products[checktData].fbt[checktDatafbt].quantity += element.quantity;\n                        else cartdata.products[checktData].fbt[checktDatafbt].quantity = cartdata.products[checktData].fbt[checktDatafbt].total_quantity;\n                    } else {\n                        cartdata.products[checktData].fbt.push(element);\n                    }\n                }\n            } else {\n                cartdata.products[checktData].fbt = data.fbt;\n            }\n        }\n    } else cartdata.products.push(data);\n    setCart(cartdata, true);\n    setDiscountRule();\n    setDiscountRuleBogo();\n};\nconst setCartExpiry = ()=>{\n    var addexpirytime = 43200000;\n    // var addexpirytime = 60000;\n    const cacheExpireDate = Date.now() + addexpirytime;\n    localStorage.setItem(\"cartexpiry\", cacheExpireDate);\n};\nconst setCart = function(cartdata) {\n    let cache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    const myJSON = JSON.stringify(cartdata);\n    let objJsonB64 = Buffer.from(myJSON).toString(\"base64\");\n    localStorage.setItem(\"cartData\", objJsonB64);\n    if (cache) {\n        setCartExpiry();\n    }\n    window.dispatchEvent(new CustomEvent(\"cartDataChanged\", {\n        detail: {\n            cartData: objJsonB64\n        }\n    }));\n};\nconst getCartCount = ()=>{\n    var cartdata = getCart();\n    var count = cartdata.products.length;\n    for(let index = 0; index < cartdata.products.length; index++){\n        var _element_gift, _element_gift1, _element_fbt, _element_fbt1;\n        const element = cartdata.products[index];\n        if (((_element_gift = element.gift) === null || _element_gift === void 0 ? void 0 : _element_gift.length) > 0) count += (_element_gift1 = element.gift) === null || _element_gift1 === void 0 ? void 0 : _element_gift1.length;\n        if (((_element_fbt = element.fbt) === null || _element_fbt === void 0 ? void 0 : _element_fbt.length) > 0) count += (_element_fbt1 = element.fbt) === null || _element_fbt1 === void 0 ? void 0 : _element_fbt1.length;\n    }\n    return count;\n};\nfunction calculateTimeLeft(endTime) {\n    const now = new Date();\n    const end = new Date(endTime);\n    const difference = end - now;\n    if (difference <= 0) {\n        return {\n            expired: true\n        };\n    }\n    return {\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60),\n        expired: false\n    };\n}\nconst getSubtotal = ()=>{\n    var cartdata = getCart();\n    var amount = 0;\n    for(let index = 0; index < cartdata.products.length; index++){\n        var _element_gift, _element_fbt;\n        const element = cartdata.products[index];\n        if (element.bogo) amount += element.quantity * element.regular_price;\n        else amount += element.quantity * element.regular_price;\n        // amount += element.quantity * element.price\n        for(let g = 0; g < (element === null || element === void 0 ? void 0 : (_element_gift = element.gift) === null || _element_gift === void 0 ? void 0 : _element_gift.length); g++){\n            const elementgift = element === null || element === void 0 ? void 0 : element.gift[g];\n            amount += elementgift.quantity * elementgift.regular_price;\n        // amount += elementgift.quantity * elementgift.discounted_amount\n        }\n        for(let f = 0; f < (element === null || element === void 0 ? void 0 : (_element_fbt = element.fbt) === null || _element_fbt === void 0 ? void 0 : _element_fbt.length); f++){\n            const elementfbt = element === null || element === void 0 ? void 0 : element.fbt[f];\n            amount += elementfbt.quantity * elementfbt.regular_price;\n        // amount += elementfbt.quantity * elementfbt.discounted_amount\n        }\n    }\n    return amount;\n};\nconst getSubtotalSale = ()=>{\n    var cartdata = getCart();\n    var amount = 0;\n    for(let index = 0; index < cartdata.products.length; index++){\n        var _element_gift, _element_fbt;\n        const element = cartdata.products[index];\n        if (element.bogo) amount += element.quantity * element.discounted_amount;\n        else amount += element.quantity * element.price;\n        for(let g = 0; g < (element === null || element === void 0 ? void 0 : (_element_gift = element.gift) === null || _element_gift === void 0 ? void 0 : _element_gift.length); g++){\n            const elementgift = element === null || element === void 0 ? void 0 : element.gift[g];\n            amount += elementgift.quantity * elementgift.discounted_amount;\n        }\n        for(let f = 0; f < (element === null || element === void 0 ? void 0 : (_element_fbt = element.fbt) === null || _element_fbt === void 0 ? void 0 : _element_fbt.length); f++){\n            const elementfbt = element === null || element === void 0 ? void 0 : element.fbt[f];\n            amount += elementfbt.quantity * elementfbt.discounted_amount;\n        }\n    }\n    return amount;\n};\nconst getSaveAmount = ()=>{\n    var cartdata = getCart();\n    var amount = 0;\n    for(let index = 0; index < cartdata.products.length; index++){\n        const element = cartdata.products[index];\n        if (element.bogo) amount += element.quantity * element.regular_price - element.quantity * element.discounted_amount;\n        else amount += element.quantity * element.regular_price - element.quantity * element.price;\n        if (element === null || element === void 0 ? void 0 : element.gift) {\n            for(let g = 0; g < (element === null || element === void 0 ? void 0 : element.gift.length); g++){\n                const elementgift = element === null || element === void 0 ? void 0 : element.gift[g];\n                amount += elementgift.quantity * elementgift.regular_price - elementgift.quantity * elementgift.discounted_amount;\n            }\n        }\n        if (element === null || element === void 0 ? void 0 : element.fbt) {\n            for(let f = 0; f < (element === null || element === void 0 ? void 0 : element.fbt.length); f++){\n                const elementfbt = element === null || element === void 0 ? void 0 : element.fbt[f];\n                amount += elementfbt.quantity * elementfbt.regular_price - elementfbt.quantity * elementfbt.discounted_amount;\n            }\n        }\n    }\n    if (getDiscountes().amount) {\n        amount += getDiscountes().amount;\n    }\n    return amount;\n};\nconst getShippingAddress = ()=>{\n    var cartdata = getCart();\n    return cartdata.shippingAddress;\n};\nconst setShippingAddress = (id)=>{\n    var cartdata = getCart();\n    cartdata.shippingAddress = id;\n    setCart(cartdata);\n    return cartdata;\n};\nconst getPaymentMethod = ()=>{\n    var cartdata = getCart();\n    return cartdata.paymentMethod;\n};\nconst setPaymentMethod = (id)=>{\n    var cartdata = getCart();\n    cartdata.paymentMethod = id;\n    setCart(cartdata);\n};\nconst getShipping = ()=>{\n    var cartdata = getCart();\n    var amount = 0;\n    if (cartdata.fees.shipping) {\n        amount += cartdata.fees.shipping.amount;\n    }\n    return amount;\n};\nconst setInstallation = (qty)=>{\n    var cartdata = getCart();\n    var feesdata = {\n        id: 0,\n        title: \"Installation Cost\",\n        title_arabic: \"تكلفـة التغــليـف\",\n        amount: qty * 95\n    };\n    cartdata.fees.installation = feesdata;\n    setCart(cartdata);\n};\nconst getInstallation = ()=>{\n    var cartdata = getCart();\n    var amount = 0;\n    if (cartdata.fees.installation) {\n        amount += cartdata.fees.installation.amount;\n    }\n    return amount;\n};\nconst unsetInstallation = ()=>{\n    var cartdata = getCart();\n    cartdata.fees.installation = {};\n    setCart(cartdata);\n    return cartdata;\n};\nconst setWrapper = ()=>{\n    var cartdata = getCart();\n    var feesdata = {\n        id: 0,\n        title: \"Packaging Cost\",\n        title_arabic: \"تكلفـة التغــليـف\",\n        amount: 95\n    };\n    cartdata.fees.wrapper = feesdata;\n    setCart(cartdata);\n};\nconst getWrapper = ()=>{\n    var cartdata = getCart();\n    var amount = 0;\n    if (cartdata.fees.wrapper) {\n        amount += cartdata.fees.wrapper.amount;\n    }\n    return amount;\n};\nconst unsetWrapper = ()=>{\n    var cartdata = getCart();\n    cartdata.fees.wrapper = {};\n    setCart(cartdata);\n    return cartdata;\n};\nconst getDiscountes = ()=>{\n    var cartdata = getCart();\n    var amount = 0;\n    var summary = [];\n    if (cartdata.discounts.discuountRules) {\n        for(let index = 0; index < cartdata.discounts.discuountRules.length; index++){\n            const element = cartdata.discounts.discuountRules[index];\n            // summary.push({ key: element.title, price: '- ' + parseFloat(element.amount).toFixed(2), title: element.title, title_arabic: element.title_arabic })\n            summary.push({\n                key: \"discountRule\",\n                price: \"- \" + parseFloat(element.amount).toFixed(2),\n                title: element.title,\n                title_arabic: element.title_arabic\n            });\n            amount += Number(parseFloat(element.amount).toFixed(2));\n        }\n    }\n    return {\n        amount: amount,\n        summary: summary\n    };\n};\nconst getAdditionalDiscount = ()=>{\n    // setAdditionalDiscount()\n    var cartdata = getCart();\n    var amountData = {};\n    if (cartdata.discounts.additionalDiscount) {\n        amountData = cartdata.discounts.additionalDiscount;\n    }\n    return amountData;\n};\nconst getExtraFees = ()=>{\n    var cartdata = getCart();\n    var amount = 0;\n    var summary = [];\n    if (cartdata.fees.fee) {\n        for(let index = 0; index < cartdata.fees.fee.length; index++){\n            const element = cartdata.fees.fee[index];\n            summary.push({\n                key: element.title,\n                title: element.title,\n                title_arabic: element.title_arabic,\n                price: \"- \" + parseFloat(element.amount).toFixed(2)\n            });\n            amount += Number(parseFloat(element.amount).toFixed(2));\n        }\n    }\n    return {\n        amount: amount,\n        summary: summary\n    };\n};\nconst getTotal = ()=>{\n    var total = getSubtotal();\n    total -= getSaveAmount();\n    var cartdata = getCart();\n    if (getShipping()) {\n        total += getShipping();\n    }\n    if (getWrapper()) {\n        total += getWrapper();\n    }\n    if (getInstallation()) {\n        total += getInstallation();\n    }\n    // if (getDiscountes().amount) {\n    //     total = getDiscountes().amount\n    // }\n    if (getCoupon().amount) {\n        total -= Number(parseFloat(getCoupon().amount).toFixed(2));\n    }\n    if (getAdditionalDiscount().amount) {\n        total -= Number(parseFloat(getAdditionalDiscount().amount).toFixed(2));\n    }\n    if (getExpressDelivery().amount) {\n        total += Number(parseFloat(getExpressDelivery().amount).toFixed(2));\n    }\n    if (getDoorStep().amount) {\n        total += Number(parseFloat(getDoorStep().amount).toFixed(2));\n    }\n    if (getExtraFees().amount) {\n        total += getExtraFees().amount;\n    }\n    return total;\n};\nconst getSummary = ()=>{\n    var summary = [];\n    summary.push({\n        key: \"subtotal\",\n        title: \"Subtotal\",\n        title_arabic: \"المجموع الفرعي\",\n        price: getSubtotal()\n    });\n    if (getShipping()) summary.push({\n        key: \"shipping\",\n        title: \"Shipping\",\n        title_arabic: \"الشحن\",\n        price: getShipping()\n    });\n    if (getWrapper()) summary.push({\n        key: \"Packaging\",\n        title: \"Packaging\",\n        title_arabic: \"التغليف\",\n        price: getWrapper()\n    });\n    if (getInstallation()) summary.push({\n        key: \"Installation\",\n        title: \"Installation\",\n        title_arabic: \"التركيب\",\n        price: getInstallation()\n    });\n    if (getDiscountes().amount) {\n        summary = summary.concat(getDiscountes().summary);\n    }\n    if (getExtraFees().amount) {\n        summary = summary.concat(getExtraFees().summary);\n    }\n    if (getCoupon().amount) // summary.push({ key: getCoupon().title, price: '- ' + Number(parseFloat(getCoupon().amount).toFixed(2)), title: getCoupon().title, title_arabic: getCoupon().title_arabic })\n    summary.push({\n        key: \"discountCoupon\",\n        price: \"- \" + Number(parseFloat(getCoupon().amount).toFixed(2)),\n        title: getCoupon().title,\n        title_arabic: getCoupon().title_arabic\n    });\n    if (getAdditionalDiscount().amount) summary.push({\n        key: \"additionalDiscount\",\n        price: \"- \" + Number(parseFloat(getAdditionalDiscount().amount).toFixed(2)),\n        title: getAdditionalDiscount().title,\n        title_arabic: getAdditionalDiscount().title_arabic\n    });\n    if (getExpressDelivery().amount) summary.push({\n        key: getExpressDelivery().title,\n        price: Number(parseFloat(getExpressDelivery().amount).toFixed(2)),\n        title: getExpressDelivery().title,\n        title_arabic: getExpressDelivery().title_arabic\n    });\n    if (getDoorStep().amount) summary.push({\n        key: getDoorStep().title,\n        price: Number(parseFloat(getDoorStep().amount).toFixed(2)),\n        title: getExpressDelivery().title,\n        title_arabic: getExpressDelivery().title_arabic\n    });\n    // if(getWrapper())\n    summary.push({\n        key: \"save\",\n        title: \"Product's Discount\",\n        title_arabic: \"خصم المنتجات\",\n        price: \"- \" + getSaveAmount()\n    });\n    summary.push({\n        key: \"total\",\n        title: \"Total\",\n        title_arabic: \"إجمالي المبلغ\",\n        price: getTotal()\n    });\n    return summary;\n};\nconst setShipping = async function() {\n    let city = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var _proid_id;\n    var cartdata = getCart();\n    var proid = getProductids();\n    if ((proid === null || proid === void 0 ? void 0 : (_proid_id = proid.id) === null || _proid_id === void 0 ? void 0 : _proid_id.length) >= 1) {\n        var setData = {\n            userid: localStorage.getItem(\"userid\"),\n            city: city ? city : localStorage.getItem(\"globalcity\"),\n            productids: proid.id\n        };\n        await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"getshipping\", setData).then((responseJson)=>{\n            if (responseJson.success) {\n                var _responseJson_data, _responseJson_data1, _responseJson_data2, _responseJson_data3;\n                cartdata = getCart();\n                var feesdata = {\n                    id: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data = responseJson.data) === null || _responseJson_data === void 0 ? void 0 : _responseJson_data.id,\n                    title: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data1 = responseJson.data) === null || _responseJson_data1 === void 0 ? void 0 : _responseJson_data1.name,\n                    title_arabic: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data2 = responseJson.data) === null || _responseJson_data2 === void 0 ? void 0 : _responseJson_data2.name_arabic,\n                    amount: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data3 = responseJson.data) === null || _responseJson_data3 === void 0 ? void 0 : _responseJson_data3.amount\n                };\n                cartdata.fees.shipping = feesdata;\n                setCart(cartdata);\n            } else {\n                cartdata = getCart();\n                cartdata.fees.shipping = {};\n                setCart(cartdata);\n            }\n        });\n    }\n    return cartdata;\n};\nconst getPaymentMethodStatus = async function() {\n    let city = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var proid = getProductids(true);\n    var setData = {\n        city: city ? city : localStorage.getItem(\"globalcity\"),\n        productids: proid.id,\n        orderamount: getTotal()\n    };\n    var data;\n    await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"checkpaymentmethod\", setData).then((responseJson)=>{\n        data = responseJson.data;\n    });\n    return data;\n};\nconst getExpressDelivery = ()=>{\n    var _cartdata_fees;\n    var cartdata = getCart();\n    var amountData = {};\n    if (cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_fees = cartdata.fees) === null || _cartdata_fees === void 0 ? void 0 : _cartdata_fees.express) {\n        var _cartdata_fees1;\n        amountData = cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_fees1 = cartdata.fees) === null || _cartdata_fees1 === void 0 ? void 0 : _cartdata_fees1.express;\n    }\n    return amountData;\n};\nconst getExpressDeliveryCart = async function() {\n    let city = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    // var proid = getProductids(true)\n    var proid = getProductidsDuplicate(true);\n    var setData = {\n        productids: proid.id,\n        product_qty: proid.quantity,\n        // city: 'Jeddah',\n        city: city ? city : localStorage.getItem(\"globalcity\")\n    };\n    var EXdata = [];\n    await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"productextradata-regional-new-cart/\".concat(localStorage.getItem(\"globalcity\")), setData).then((responseJson)=>{\n        EXdata = responseJson;\n    });\n    return EXdata;\n};\nconst getExpressDeliveryData = async function() {\n    let city = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    // var proid = getProductids(true)\n    var proid = getProductidsDuplicate(true);\n    var setData = {\n        productids: proid.id,\n        productqty: proid.quantity,\n        city: city ? city : localStorage.getItem(\"globalcity\")\n    };\n    var cartdata = getCart();\n    var preprocount = cartdata.products.filter((element)=>element.pre_order == 1).length;\n    if (preprocount == 1) {\n        return [];\n    }\n    var EXdata = [];\n    await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"getexpress-regional-new\", setData).then((responseJson)=>{\n        EXdata = responseJson;\n    });\n    return EXdata;\n};\nconst unsetExpressDelivery = ()=>{\n    var cartdata = getCart();\n    cartdata.fees.express = {};\n    for(let index = 0; index < cartdata.products.length; index++){\n        cartdata.products[index].express = false;\n    }\n    setCart(cartdata);\n    return cartdata;\n};\nconst setExpressDelivery = function() {\n    let data = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var _data_data, _data_data1, _data_data2, _data_data3, _data_data4;\n    var cartdata = getCart();\n    var feesdata = {\n        id: data === null || data === void 0 ? void 0 : (_data_data = data.data) === null || _data_data === void 0 ? void 0 : _data_data.id,\n        title: data === null || data === void 0 ? void 0 : (_data_data1 = data.data) === null || _data_data1 === void 0 ? void 0 : _data_data1.title,\n        title_arabic: data === null || data === void 0 ? void 0 : (_data_data2 = data.data) === null || _data_data2 === void 0 ? void 0 : _data_data2.title_arabic,\n        num_of_days: data === null || data === void 0 ? void 0 : (_data_data3 = data.data) === null || _data_data3 === void 0 ? void 0 : _data_data3.num_of_days,\n        amount: data === null || data === void 0 ? void 0 : (_data_data4 = data.data) === null || _data_data4 === void 0 ? void 0 : _data_data4.price\n    };\n    cartdata.fees.express = feesdata;\n    for(let index = 0; index < cartdata.products.length; index++){\n        var _element_gift, _element_fbt, _data_data_applied_id, _data_data5;\n        const element = cartdata.products[index];\n        // free gift\n        for(let g = 0; g < (element === null || element === void 0 ? void 0 : (_element_gift = element.gift) === null || _element_gift === void 0 ? void 0 : _element_gift.length); g++){\n            var _data_data_applied_id1, _data_data6;\n            const elementgift = element === null || element === void 0 ? void 0 : element.gift[g];\n            if (data === null || data === void 0 ? void 0 : (_data_data6 = data.data) === null || _data_data6 === void 0 ? void 0 : (_data_data_applied_id1 = _data_data6.applied_id) === null || _data_data_applied_id1 === void 0 ? void 0 : _data_data_applied_id1.includes(elementgift.id)) {\n                var _data_data_applied_id2;\n                cartdata.products[index].gift[g].express = true;\n                var qty = 0;\n                var totalQty = 0;\n                for(let i = 0; i < (data === null || data === void 0 ? void 0 : (_data_data_applied_id2 = data.data.applied_id) === null || _data_data_applied_id2 === void 0 ? void 0 : _data_data_applied_id2.length); i++){\n                    const elm = data === null || data === void 0 ? void 0 : data.data.applied_id[i];\n                    if ((elementgift === null || elementgift === void 0 ? void 0 : elementgift.id) == elm) {\n                        var _data_data7;\n                        totalQty = data === null || data === void 0 ? void 0 : data.quantities[i];\n                        if ((data === null || data === void 0 ? void 0 : (_data_data7 = data.data) === null || _data_data7 === void 0 ? void 0 : _data_data7.applied_qtys[i]) >= (data === null || data === void 0 ? void 0 : data.quantities[i])) {\n                            qty = data === null || data === void 0 ? void 0 : data.quantities[i];\n                        } else {\n                            var _data_data8;\n                            qty = data === null || data === void 0 ? void 0 : (_data_data8 = data.data) === null || _data_data8 === void 0 ? void 0 : _data_data8.applied_qtys[i];\n                        }\n                    }\n                }\n                cartdata.products[index].gift[g].express_qty = qty;\n                cartdata.products[index].gift[g].express_total_qty = totalQty;\n            }\n        }\n        // fbt\n        for(let f = 0; f < (element === null || element === void 0 ? void 0 : (_element_fbt = element.fbt) === null || _element_fbt === void 0 ? void 0 : _element_fbt.length); f++){\n            var _data_data_applied_id3, _data_data9;\n            const elementfbt = element === null || element === void 0 ? void 0 : element.fbt[f];\n            if (data === null || data === void 0 ? void 0 : (_data_data9 = data.data) === null || _data_data9 === void 0 ? void 0 : (_data_data_applied_id3 = _data_data9.applied_id) === null || _data_data_applied_id3 === void 0 ? void 0 : _data_data_applied_id3.includes(elementfbt.id)) {\n                var _data_data_applied_id4;\n                cartdata.products[index].fbt[f].express = true;\n                var qty = 0;\n                var totalQty = 0;\n                for(let i = 0; i < (data === null || data === void 0 ? void 0 : (_data_data_applied_id4 = data.data.applied_id) === null || _data_data_applied_id4 === void 0 ? void 0 : _data_data_applied_id4.length); i++){\n                    const elm = data === null || data === void 0 ? void 0 : data.data.applied_id[i];\n                    if ((elementfbt === null || elementfbt === void 0 ? void 0 : elementfbt.id) == elm) {\n                        var _data_data10;\n                        totalQty = data === null || data === void 0 ? void 0 : data.quantities[i];\n                        if ((data === null || data === void 0 ? void 0 : (_data_data10 = data.data) === null || _data_data10 === void 0 ? void 0 : _data_data10.applied_qtys[i]) >= (data === null || data === void 0 ? void 0 : data.quantities[i])) {\n                            qty = data === null || data === void 0 ? void 0 : data.quantities[i];\n                        } else {\n                            var _data_data11;\n                            qty = data === null || data === void 0 ? void 0 : (_data_data11 = data.data) === null || _data_data11 === void 0 ? void 0 : _data_data11.applied_qtys[i];\n                        }\n                    }\n                }\n                cartdata.products[index].fbt[f].express_qty = qty;\n                cartdata.products[index].fbt[f].express_total_qty = totalQty;\n            }\n        }\n        if (data === null || data === void 0 ? void 0 : (_data_data5 = data.data) === null || _data_data5 === void 0 ? void 0 : (_data_data_applied_id = _data_data5.applied_id) === null || _data_data_applied_id === void 0 ? void 0 : _data_data_applied_id.includes(element.id)) {\n            var _data_data_applied_id5;\n            cartdata.products[index].express = true;\n            var qty = 0;\n            var totalQty = 0;\n            for(let i = 0; i < (data === null || data === void 0 ? void 0 : (_data_data_applied_id5 = data.data.applied_id) === null || _data_data_applied_id5 === void 0 ? void 0 : _data_data_applied_id5.length); i++){\n                const elm = data === null || data === void 0 ? void 0 : data.data.applied_id[i];\n                if ((element === null || element === void 0 ? void 0 : element.id) == elm) {\n                    var _data_data12;\n                    totalQty = data === null || data === void 0 ? void 0 : data.quantities[i];\n                    if ((data === null || data === void 0 ? void 0 : (_data_data12 = data.data) === null || _data_data12 === void 0 ? void 0 : _data_data12.applied_qtys[i]) >= (data === null || data === void 0 ? void 0 : data.quantities[i])) {\n                        qty = data === null || data === void 0 ? void 0 : data.quantities[i];\n                    } else {\n                        var _data_data13;\n                        qty = data === null || data === void 0 ? void 0 : (_data_data13 = data.data) === null || _data_data13 === void 0 ? void 0 : _data_data13.applied_qtys[i];\n                    }\n                }\n            }\n            cartdata.products[index].express_qty = qty;\n            cartdata.products[index].express_total_qty = totalQty;\n        }\n    }\n    setCart(cartdata);\n    return true;\n};\n// const setExpressDelivery = (data: any = false) => {\n//     var cartdata: any = getCart();\n//     var feesdata: any = {\n//         id: data?.data?.id,\n//         title: data?.data?.title,\n//         title_arabic: data?.data?.title_arabic,\n//         num_of_days: data?.data?.num_of_days,\n//         amount: data?.data?.price,\n//     }\n//     cartdata.fees.express = feesdata\n//     for (let index = 0; index < cartdata.products.length; index++) {\n//         const element = cartdata.products[index];\n//         if (data?.data?.applied_id?.includes(element.id)) {\n//             cartdata.products[index].express = true\n//             var qty = 0;\n//             for (let i = 0; i < data?.data.applied_id?.length; i++) {\n//                 const elm = data?.data.applied_id[i];\n//                 if(element?.id == elm) {\n//                     if(data?.data?.applied_qtys[i] >= data?.quantities[i]) {\n//                         qty = data?.quantities[i]\n//                     }\n//                     else {\n//                         qty = data?.data?.applied_qtys[i]\n//                     }\n//                 }\n//             }\n//             cartdata.products[index].express_qty = qty\n//         }\n//     }\n//     setCart(cartdata)\n//     return true;\n// }\nconst getDoorStep = ()=>{\n    var _cartdata_fees;\n    var cartdata = getCart();\n    var amountData = {};\n    if (cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_fees = cartdata.fees) === null || _cartdata_fees === void 0 ? void 0 : _cartdata_fees.doorstep) {\n        var _cartdata_fees1;\n        amountData = cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_fees1 = cartdata.fees) === null || _cartdata_fees1 === void 0 ? void 0 : _cartdata_fees1.doorstep;\n    }\n    return amountData;\n};\nconst getDoorStepData = async ()=>{\n    var proid = getProductids(true);\n    var setData = {\n        productids: proid.id\n    };\n    var EXdata = [];\n    await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"getdoorstep\", setData).then((responseJson)=>{\n        EXdata = responseJson === null || responseJson === void 0 ? void 0 : responseJson.data;\n    });\n    return EXdata;\n};\nconst unsetDoorStep = ()=>{\n    var cartdata = getCart();\n    cartdata.fees.doorstep = {};\n    setCart(cartdata);\n    return cartdata;\n};\nconst setDoorStep = function() {\n    let data = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var cartdata = getCart();\n    var feesdata = {\n        id: data === null || data === void 0 ? void 0 : data.id,\n        title: data === null || data === void 0 ? void 0 : data.title,\n        title_arabic: data === null || data === void 0 ? void 0 : data.title_arabic,\n        num_of_days: data === null || data === void 0 ? void 0 : data.num_of_days,\n        amount: data === null || data === void 0 ? void 0 : data.price\n    };\n    cartdata.fees.doorstep = feesdata;\n    setCart(cartdata);\n    return true;\n};\nconst getCoupon = ()=>{\n    var _cartdata_discounts;\n    var cartdata = getCart();\n    var amountData = {};\n    if (cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_discounts = cartdata.discounts) === null || _cartdata_discounts === void 0 ? void 0 : _cartdata_discounts.coupon) {\n        var _cartdata_discounts1;\n        amountData = cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_discounts1 = cartdata.discounts) === null || _cartdata_discounts1 === void 0 ? void 0 : _cartdata_discounts1.coupon;\n    }\n    return amountData;\n};\nconst unsetcoupon = ()=>{\n    var cartdata = getCart();\n    cartdata.discounts.coupon = {};\n    cartdata.extradata = [];\n    setCart(cartdata);\n    return cartdata;\n};\nconst setCoupon = async function() {\n    let city = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false, code = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var cartdata = getCart();\n    var proid = getProductids(true);\n    var setData = {\n        userid: localStorage.getItem(\"userid\"),\n        city: city ? city : localStorage.getItem(\"globalcity\"),\n        productids: proid.id,\n        productprice: proid.price,\n        productqty: proid.quantity,\n        coupon_code: code ? code : false,\n        paymentmethod: (cartdata === null || cartdata === void 0 ? void 0 : cartdata.paymentMethod) ? cartdata === null || cartdata === void 0 ? void 0 : cartdata.paymentMethod : false,\n        // subtotal: getSubtotal(),\n        // subtotal: getSubtotalSale(),\n        subtotal: getTotal(),\n        cartdata: cartdata,\n        device: \"app\"\n    };\n    var success = false;\n    await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"couponData\", setData).then((responseJson)=>{\n        if (responseJson.success) {\n            var _responseJson_data, _responseJson_data1, _responseJson_data2, _responseJson_data3, _responseJson_data4, _responseJson_data5;\n            cartdata = getCart();\n            var feesdata = {\n                id: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data = responseJson.data) === null || _responseJson_data === void 0 ? void 0 : _responseJson_data.id,\n                title: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data1 = responseJson.data) === null || _responseJson_data1 === void 0 ? void 0 : _responseJson_data1.title,\n                title_arabic: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data2 = responseJson.data) === null || _responseJson_data2 === void 0 ? void 0 : _responseJson_data2.title_arabic,\n                amount: responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data3 = responseJson.data) === null || _responseJson_data3 === void 0 ? void 0 : _responseJson_data3.amount\n            };\n            cartdata.discounts.coupon = feesdata;\n            if (responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data4 = responseJson.data) === null || _responseJson_data4 === void 0 ? void 0 : _responseJson_data4.extradata) cartdata.extradata = responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data5 = responseJson.data) === null || _responseJson_data5 === void 0 ? void 0 : _responseJson_data5.extradata;\n            setCart(cartdata);\n            success = true;\n        }\n    });\n    return success;\n};\nconst setAdditionalDiscount = ()=>{\n    var cartdata = getCart();\n    var discount = 0;\n    var products = cartdata.products;\n    // Exclude BOGO products\n    const validProducts = products.filter((product)=>product.bogo !== 1);\n    // Calculate total quantity\n    const totalQuantity = validProducts.reduce((sum, product)=>sum + product.quantity, 0);\n    if (totalQuantity > 1) {\n        // Check brand condition\n        const hasBrandCondition = validProducts.some((product)=>product.brand && [\n                22,\n                23,\n                42\n            ].includes(product.brand.id));\n        if (hasBrandCondition) {\n            if (validProducts.length === 1) {\n                // Handle single product\n                const product = validProducts[0];\n                const adjustedQuantity = product.quantity > 1 ? product.quantity - 1 : product.quantity;\n                const totalPrice = adjustedQuantity * product.price;\n                // Calculate discount\n                discount = Math.floor(totalPrice / 1000) * 100;\n                // Cap discount to product price\n                if (discount > product.price) {\n                    discount = product.price;\n                }\n            } else if (validProducts.length > 1) {\n                // Handle multiple products\n                const productWithLowestAmount = validProducts.reduce((lowest, current)=>{\n                    const lowestAmount = lowest.quantity * lowest.price;\n                    const currentAmount = current.quantity * current.price;\n                    return currentAmount < lowestAmount ? current : lowest;\n                });\n                // Remove the lowest-amount product\n                const remainingProducts = validProducts.filter((product)=>product !== productWithLowestAmount);\n                // Calculate remaining total amount\n                const remainingTotalAmount = remainingProducts.reduce((sum, product)=>sum + product.quantity * product.price, 0);\n                // Calculate discount\n                discount = Math.floor(remainingTotalAmount / 1000) * 100;\n                // Cap discount to the amount of the removed product\n                const removedProductAmount = productWithLowestAmount.quantity * productWithLowestAmount.price;\n                if (discount > removedProductAmount) {\n                    discount = removedProductAmount;\n                }\n            }\n        }\n    }\n    // Apply discount to cart\n    const adddiscount = discount > 0 ? {\n        id: 0,\n        title: \"Gift Voucher\",\n        title_arabic: \"قسيمة هدية\",\n        amount: discount\n    } : {};\n    cartdata.discounts.additionalDiscount = adddiscount;\n    setCart(cartdata);\n    return true;\n};\nconst setDiscountRule = async function() {\n    let city = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var _cartdata_products;\n    var cartdata = getCart();\n    var proid = getProductids(true);\n    if ((cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_products = cartdata.products) === null || _cartdata_products === void 0 ? void 0 : _cartdata_products.length) >= 1) {\n        var _cartdata_discounts, _cartdata_discounts_coupon, _cartdata_discounts1;\n        var setData = {\n            userid: localStorage.getItem(\"userid\"),\n            city: city ? city : localStorage.getItem(\"globalcity\"),\n            productids: proid.id,\n            productprice: proid.price,\n            productqty: proid.quantity,\n            coupon: (cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_discounts = cartdata.discounts) === null || _cartdata_discounts === void 0 ? void 0 : _cartdata_discounts.coupon) ? cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_discounts1 = cartdata.discounts) === null || _cartdata_discounts1 === void 0 ? void 0 : (_cartdata_discounts_coupon = _cartdata_discounts1.coupon) === null || _cartdata_discounts_coupon === void 0 ? void 0 : _cartdata_discounts_coupon.id : false,\n            paymentmethod: (cartdata === null || cartdata === void 0 ? void 0 : cartdata.paymentMethod) ? cartdata === null || cartdata === void 0 ? void 0 : cartdata.paymentMethod : false,\n            //subtotal: getSubtotal(),\n            subtotal: getTotal(),\n            extradata: (cartdata === null || cartdata === void 0 ? void 0 : cartdata.extradata) ? cartdata === null || cartdata === void 0 ? void 0 : cartdata.extradata : null,\n            discountType: 0,\n            device: \"app\"\n        };\n        await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"discountRule\", setData).then(async (responseJson)=>{\n            if (responseJson.success) {\n                cartdata = getCart();\n                var discounts = [];\n                if (responseJson.data.cart.length) discounts = discounts.concat(responseJson.data.cart);\n                if (responseJson.data.bulk.length) discounts = discounts.concat(responseJson.data.bulk);\n                cartdata.discounts.discuountRules = discounts;\n                // setCart(cartdata)\n                // cartdata.products = cartdata.products.filter((e: any) => !e?.bogo)\n                //cartdata = removeBogo(cartdata)\n                // for (let index = 0; index < cartdata.products.length; index++) {\n                //     const element = cartdata.products[index];\n                //     if(element?.bogo){\n                //         // console.log(index)\n                //         // console.log(cartdata.products[index])\n                //         // await cartdata.products.splice(index,1)\n                //     }\n                // }\n                // cartdata.products = cartdata.products.filter((e: any) => !e?.bogo)\n                // if (responseJson.data.bogo.length) {\n                //     cartdata.products = cartdata.products.concat(responseJson.data.bogo)\n                // }\n                //console.log(cartdata.products)\n                // if(responseJson.data.bogo.length)\n                //     cartdata = addBogo(responseJson.data.bogo, cartdata)\n                //console.log(cartdata.products)\n                //console.log(responseJson.data.bogo.length)\n                // setTimeout(function(){\n                //     if(responseJson.data.bogo.length)\n                //         addBogo(responseJson.data.bogo)\n                // }, 1000)\n                setCart(cartdata);\n                return false;\n            }\n        });\n    }\n    return cartdata;\n};\nconst setDiscountRuleBogo = async function() {\n    let city = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var _cartdata_products;\n    var cartdata = getCart();\n    var proid = getProductids(true);\n    if ((cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_products = cartdata.products) === null || _cartdata_products === void 0 ? void 0 : _cartdata_products.length) >= 1) {\n        var _cartdata_discounts, _cartdata_discounts_coupon, _cartdata_discounts1;\n        var setData = {\n            userid: localStorage.getItem(\"userid\"),\n            city: city ? city : localStorage.getItem(\"globalcity\"),\n            productids: proid.id,\n            productprice: proid.price,\n            productqty: proid.quantity,\n            coupon: (cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_discounts = cartdata.discounts) === null || _cartdata_discounts === void 0 ? void 0 : _cartdata_discounts.coupon) ? cartdata === null || cartdata === void 0 ? void 0 : (_cartdata_discounts1 = cartdata.discounts) === null || _cartdata_discounts1 === void 0 ? void 0 : (_cartdata_discounts_coupon = _cartdata_discounts1.coupon) === null || _cartdata_discounts_coupon === void 0 ? void 0 : _cartdata_discounts_coupon.id : false,\n            paymentmethod: (cartdata === null || cartdata === void 0 ? void 0 : cartdata.paymentMethod) ? cartdata === null || cartdata === void 0 ? void 0 : cartdata.paymentMethod : false,\n            //subtotal: getSubtotal(),\n            // subtotal: getSubtotalSale(),\n            subtotal: getTotal(),\n            extradata: (cartdata === null || cartdata === void 0 ? void 0 : cartdata.extradata) ? cartdata === null || cartdata === void 0 ? void 0 : cartdata.extradata : null,\n            discountType: 1,\n            device: \"app\"\n        };\n        await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"discountRule\", setData).then(async (responseJson)=>{\n            if (responseJson.success) {\n                cartdata = getCart();\n                cartdata.products = cartdata.products.filter((e)=>!(e === null || e === void 0 ? void 0 : e.bogo));\n                if (responseJson.data.bogo.length) {\n                    cartdata.products = cartdata.products.concat(responseJson.data.bogo);\n                }\n                setCart(cartdata);\n                return false;\n            }\n        });\n    }\n    return cartdata;\n};\nconst recheckcartdata = async function() {\n    let lang = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"ar\", city = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var cartdata = getCart();\n    var proid = getProductids();\n    var response = {\n        success: true,\n        messages: []\n    };\n    var removeids = [];\n    if (proid.id.length) {\n        var setData = {\n            productids: proid.id,\n            city: city ? city : localStorage.getItem(\"globalcity\")\n        };\n        await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"recheckdata-regional-new\", setData).then((responseJson)=>{\n            for(let index = 0; index < cartdata.products.length; index++){\n                var _responseJson_data;\n                const element = cartdata.products[index];\n                var checkdata = responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_data = responseJson.data) === null || _responseJson_data === void 0 ? void 0 : _responseJson_data.filter((e)=>e.id == element.id);\n                if (checkdata === null || checkdata === void 0 ? void 0 : checkdata.length) {\n                    var _checkdata_, _checkdata_1, _element_gift, _element_fbt;\n                    cartdata.products[index].total_quantity = checkdata[0].quantity;\n                    if (checkdata[0].quantity < cartdata.products[index].quantity) {\n                        response.success = false;\n                        var me = element.name + \" quantity has been changed\";\n                        response.messages.push(me);\n                        cartdata.products[index].quantity = checkdata[0].quantity;\n                    }\n                    if (cartdata.products[index].quantity <= 0) {\n                        removeids.push(index);\n                        response.success = false;\n                    }\n                    var newprice = checkdata[0].sale_price ? checkdata[0].sale_price : checkdata[0].price;\n                    // if(checkdata[0].promotional_price){\n                    //     newprice -= checkdata[0].promotional_price\n                    // }\n                    if (((_checkdata_ = checkdata[0]) === null || _checkdata_ === void 0 ? void 0 : _checkdata_.flash_sale_expiry) && ((_checkdata_1 = checkdata[0]) === null || _checkdata_1 === void 0 ? void 0 : _checkdata_1.flash_sale_price)) {\n                        var _checkdata_2;\n                        var timer = calculateTimeLeft((_checkdata_2 = checkdata[0]) === null || _checkdata_2 === void 0 ? void 0 : _checkdata_2.flash_sale_expiry);\n                        if (!(timer === null || timer === void 0 ? void 0 : timer.expired)) {\n                            var _checkdata_3;\n                            newprice = (_checkdata_3 = checkdata[0]) === null || _checkdata_3 === void 0 ? void 0 : _checkdata_3.flash_sale_price;\n                        }\n                    }\n                    if (cartdata.products[index].price != newprice) {\n                        cartdata.products[index].price = newprice;\n                        response.success = false;\n                        var me = element.name + \" price has been changed\";\n                        response.messages.push(me);\n                    }\n                    cartdata.products[index].regular_price = checkdata[0].price;\n                    if (element === null || element === void 0 ? void 0 : (_element_gift = element.gift) === null || _element_gift === void 0 ? void 0 : _element_gift.length) {\n                        var _responseJson_extraData_element_id, _responseJson_extraData_element_id_freegiftData, _responseJson_extraData_element_id1, _element_gift1;\n                        if (!(responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_extraData_element_id = responseJson.extraData[element.id]) === null || _responseJson_extraData_element_id === void 0 ? void 0 : _responseJson_extraData_element_id.freegiftData)) {\n                            cartdata.products[index].gift = [];\n                            response.success = false;\n                            var me = element.name + \" gifts has been changed\";\n                            response.messages.push(me);\n                        } else if ((responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_extraData_element_id1 = responseJson.extraData[element.id]) === null || _responseJson_extraData_element_id1 === void 0 ? void 0 : (_responseJson_extraData_element_id_freegiftData = _responseJson_extraData_element_id1.freegiftData) === null || _responseJson_extraData_element_id_freegiftData === void 0 ? void 0 : _responseJson_extraData_element_id_freegiftData.allowed_gifts) < (element === null || element === void 0 ? void 0 : (_element_gift1 = element.gift) === null || _element_gift1 === void 0 ? void 0 : _element_gift1.length)) {\n                            cartdata.products[index].gift = [];\n                            response.success = false;\n                            var me = element.name + \" gifts has been changed\";\n                            response.messages.push(me);\n                        }\n                    }\n                    if (element === null || element === void 0 ? void 0 : (_element_fbt = element.fbt) === null || _element_fbt === void 0 ? void 0 : _element_fbt.length) {\n                        var _responseJson_extraData_element_id2;\n                        if (!(responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_extraData_element_id2 = responseJson.extraData[element.id]) === null || _responseJson_extraData_element_id2 === void 0 ? void 0 : _responseJson_extraData_element_id2.fbtdata)) {\n                            cartdata.products[index].fbt = [];\n                            response.success = false;\n                            var me = element.name + \" fbt has been changed\";\n                            response.messages.push(me);\n                        } else {\n                            var _responseJson_extraData_element_id_fbtdata, _responseJson_extraData_element_id3, _responseJson_extraData_element_id_fbtdata1, _responseJson_extraData_element_id4;\n                            const elementfbt = responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_extraData_element_id3 = responseJson.extraData[element.id]) === null || _responseJson_extraData_element_id3 === void 0 ? void 0 : (_responseJson_extraData_element_id_fbtdata = _responseJson_extraData_element_id3.fbtdata) === null || _responseJson_extraData_element_id_fbtdata === void 0 ? void 0 : _responseJson_extraData_element_id_fbtdata.fbtlist[0];\n                            const currentfbt = element === null || element === void 0 ? void 0 : element.fbt[0];\n                            var fbtprice = elementfbt.productdetail.sale_price ? elementfbt.productdetail.sale_price : elementfbt.productdetail.price;\n                            if ((responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_extraData_element_id4 = responseJson.extraData[element.id]) === null || _responseJson_extraData_element_id4 === void 0 ? void 0 : (_responseJson_extraData_element_id_fbtdata1 = _responseJson_extraData_element_id4.fbtdata) === null || _responseJson_extraData_element_id_fbtdata1 === void 0 ? void 0 : _responseJson_extraData_element_id_fbtdata1.discount_type) == 1) {\n                                fbtprice -= (elementfbt === null || elementfbt === void 0 ? void 0 : elementfbt.discount) * fbtprice / 100;\n                            } else {\n                                var _responseJson_extraData_element_id_fbtdata2, _responseJson_extraData_element_id5;\n                                // fbtprice = elementfbt?.discount;\n                                // amount type\n                                if ((responseJson === null || responseJson === void 0 ? void 0 : (_responseJson_extraData_element_id5 = responseJson.extraData[element.id]) === null || _responseJson_extraData_element_id5 === void 0 ? void 0 : (_responseJson_extraData_element_id_fbtdata2 = _responseJson_extraData_element_id5.fbtdata) === null || _responseJson_extraData_element_id_fbtdata2 === void 0 ? void 0 : _responseJson_extraData_element_id_fbtdata2.amount_type) == 1) {\n                                    fbtprice = fbtprice - (elementfbt === null || elementfbt === void 0 ? void 0 : elementfbt.discount);\n                                } else {\n                                    fbtprice = elementfbt === null || elementfbt === void 0 ? void 0 : elementfbt.discount;\n                                }\n                            }\n                            if ((currentfbt === null || currentfbt === void 0 ? void 0 : currentfbt.discounted_amount) != fbtprice || (currentfbt === null || currentfbt === void 0 ? void 0 : currentfbt.id) != elementfbt.product_id) {\n                                cartdata.products[index].fbt = [];\n                                response.success = false;\n                                var me = element.name + \" fbt has been changed\";\n                                response.messages.push(me);\n                            }\n                        }\n                    }\n                }\n            }\n            setCart(cartdata);\n            if (removeids === null || removeids === void 0 ? void 0 : removeids.length) {\n                for(let index = 0; index < removeids.length; index++){\n                    const element = removeids[index];\n                    removeCartItem(element);\n                }\n            }\n        });\n    }\n    return response;\n};\nconst getProductidsDuplicate = function() {\n    let extra = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var cartData = getCart();\n    var productids = [];\n    var productprice = [];\n    var productqty = [];\n    var productData = false;\n    for(let index = 0; index < cartData.products.length; index++){\n        const element = cartData.products[index];\n        // productids.push(element.id)\n        // productprice.push(element.price)\n        // productqty.push(element.quantity)\n        // if (!element.bogo) {\n        productids.push(element.id);\n        productprice.push(element.price);\n        productqty.push(element.quantity);\n        if (element === null || element === void 0 ? void 0 : element.gift) {\n            // console.log(element?.gift.map(function (g: any) { return g.id; }));\n            productids = productids.concat(element === null || element === void 0 ? void 0 : element.gift.map(function(g) {\n                return g.id;\n            }));\n            productprice = productprice.concat(element === null || element === void 0 ? void 0 : element.gift.map(function(g) {\n                return g.discounted_amount;\n            }));\n            productqty = productqty.concat(element === null || element === void 0 ? void 0 : element.gift.map(function(g) {\n                return g.quantity;\n            }));\n        }\n        if (element === null || element === void 0 ? void 0 : element.fbt) {\n            productids = productids.concat(element === null || element === void 0 ? void 0 : element.fbt.map(function(f) {\n                return f.id;\n            }));\n            productprice = productprice.concat(element === null || element === void 0 ? void 0 : element.fbt.map(function(f) {\n                return f.discounted_amount;\n            }));\n            productqty = productqty.concat(element === null || element === void 0 ? void 0 : element.fbt.map(function(f) {\n                return f.quantity;\n            }));\n        }\n    // }\n    }\n    if (extra) {\n        productData = {\n            id: productids,\n            quantity: productqty,\n            price: productprice\n        };\n    } else {\n        productData = {\n            id: productids\n        };\n    }\n    return productData;\n};\nconst getProductids = function() {\n    let extra = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var cartData = getCart();\n    var productids = [];\n    var productprice = [];\n    var productqty = [];\n    var productData = false;\n    for(let index = 0; index < cartData.products.length; index++){\n        const element = cartData.products[index];\n        if (!element.bogo) {\n            productids.push(element.id);\n            productprice.push(element.price);\n            productqty.push(element.quantity);\n            // if(element?.gift){\n            //     // console.log(element?.gift.map(function (g: any) { return g.id; }));\n            //     productids = productids.concat(element?.gift.map(function (g: any) { return g.id; }))\n            //     productprice = productprice.concat(element?.gift.map(function (g: any) { return g.discounted_amount; }))\n            //     productqty = productqty.concat(element?.gift.map(function (g: any) { return g.quantity; }))\n            // }\n            if (element === null || element === void 0 ? void 0 : element.fbt) {\n                productids = productids.concat(element === null || element === void 0 ? void 0 : element.fbt.map(function(f) {\n                    return f.id;\n                }));\n                productprice = productprice.concat(element === null || element === void 0 ? void 0 : element.fbt.map(function(f) {\n                    return f.discounted_amount;\n                }));\n                productqty = productqty.concat(element === null || element === void 0 ? void 0 : element.fbt.map(function(f) {\n                    return f.quantity;\n                }));\n            }\n        }\n    }\n    if (extra) {\n        productData = {\n            id: productids,\n            quantity: productqty,\n            price: productprice\n        };\n    } else {\n        productData = {\n            id: productids\n        };\n    }\n    return productData;\n};\nconst proceedToCheckout = async function() {\n    let city = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false, lang = arguments.length > 1 ? arguments[1] : void 0, userDevice = arguments.length > 2 ? arguments[2] : void 0;\n    var cartdata = getCart();\n    var proid = getProductids(true);\n    var setData = {\n        userid: localStorage.getItem(\"userid\"),\n        city: city ? city : localStorage.getItem(\"globalcity\"),\n        cartdata: cartdata,\n        subtotal: getSubtotal(),\n        saveamounttotal: getSaveAmount(),\n        total: getTotal(),\n        lang: lang,\n        userDevice: userDevice,\n        extradata: (cartdata === null || cartdata === void 0 ? void 0 : cartdata.extradata) ? cartdata === null || cartdata === void 0 ? void 0 : cartdata.extradata : null,\n        affiliationCode: localStorage.getItem(\"affiliationCode\"),\n        mobileapp: true\n    };\n    var response = {};\n    await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"submitOrder\", setData).then((responseJson)=>{\n        var _localStorage;\n        cartdata = getCart();\n        cartdata.orderId = responseJson.order_id;\n        response = responseJson.redirection;\n        if (!((_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.getItem(\"orderId\"))) {\n            var _localStorage1;\n            (_localStorage1 = localStorage) === null || _localStorage1 === void 0 ? void 0 : _localStorage1.setItem(\"orderId\", responseJson.order_id);\n        }\n        setCart(cartdata);\n        if (cartdata.paymentMethod == \"cod\") removeCart();\n    });\n    return response;\n};\nconst getOrderId = ()=>{\n    var cartdata = getCart();\n    return cartdata.orderId;\n};\nconst setExtraFees = async function() {\n    let paymentMethod = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var cartdata = getCart();\n    var setData = {\n        paymentmethod: paymentMethod ? paymentMethod : false,\n        //amount: getSubtotal(),\n        amount: getSubtotalSale()\n    };\n    await (0,_api_ApiCalls__WEBPACK_IMPORTED_MODULE_0__.post)(\"getfees\", setData).then((responseJson)=>{\n        cartdata.fees.fee = responseJson === null || responseJson === void 0 ? void 0 : responseJson.data;\n        setCart(cartdata);\n    });\n    return cartdata;\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9bbGFuZ10vY2FydHN0b3JhZ2UvY2FydC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUM0QztBQThENUMsTUFBTUMsWUFBWSxJQUFhO1FBQzNCQyxVQUFVLEVBQUU7UUFDWkMsV0FBVztZQUNQQyxRQUFRLENBQUM7WUFDVEMsZ0JBQWdCLEVBQUU7WUFDbEJDLG9CQUFvQixDQUFDO1FBRXpCO1FBQ0FDLE1BQU07WUFDRkMsVUFBVSxDQUFDO1lBQ1hDLFNBQVMsQ0FBQztZQUNWQyxVQUFVLENBQUM7WUFDWEMsS0FBSyxFQUFFO1lBQ1BDLFNBQVMsQ0FBQztZQUNWQyxjQUFjLENBQUM7UUFDbkI7UUFDQUMsV0FBVztRQUNYQyxlQUFlO1FBQ2ZDLGlCQUFpQjtRQUNqQkMsU0FBUztJQUNiO0FBRUEsTUFBTUMsYUFBYSxDQUEwQkM7SUFDekMsT0FBT0MsT0FBT0MsTUFBTSxDQUFDcEIsYUFBYWtCO0FBQ3RDO0FBRUEsTUFBTUcscUJBQXFCO0lBQ3ZCLElBQUlDLFdBQVdDO0lBQ2ZELFNBQVNULFNBQVMsR0FBRztJQUNyQlMsU0FBU1IsYUFBYSxHQUFHO0lBQ3pCUSxTQUFTUCxlQUFlLEdBQUc7SUFDM0JPLFNBQVNwQixTQUFTLENBQUNDLE1BQU0sR0FBRyxDQUFDO0lBQzdCbUIsU0FBU2hCLElBQUksQ0FBQ0UsT0FBTyxHQUFHLENBQUM7SUFDekJjLFNBQVNoQixJQUFJLENBQUNHLFFBQVEsR0FBRyxDQUFDO0lBQzFCYSxTQUFTaEIsSUFBSSxDQUFDSyxPQUFPLEdBQUcsQ0FBQztJQUN6QlcsU0FBU2hCLElBQUksQ0FBQ00sWUFBWSxHQUFHLENBQUM7SUFDOUJVLFNBQVNoQixJQUFJLENBQUNJLEdBQUcsR0FBRyxFQUFFO0lBQ3RCLElBQUssSUFBSWMsUUFBUSxHQUFHQSxRQUFRRixTQUFTckIsUUFBUSxDQUFDd0IsTUFBTSxFQUFFRCxRQUFT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O0lBQ0EsTUFBTW5ILG1EQUFJQSxDQUFDLFdBQVdzSixTQUFTRyxJQUFJLENBQUMsQ0FBQ0M7UUFDakNuSSxTQUFTaEIsSUFBSSxDQUFDSSxHQUFHLEdBQUcrSSx5QkFBQUEsbUNBQUFBLGFBQWNsSCxJQUFJO1FBQ3RDYixRQUFRSjtJQUNaO0lBQ0EsT0FBT0E7QUFDWDtBQUVnd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL1tsYW5nXS9jYXJ0c3RvcmFnZS9jYXJ0LnRzeD9mNjA4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRpc2Nvbm5lY3QsIHRpdGxlIH0gZnJvbSBcInByb2Nlc3NcIjtcclxuaW1wb3J0IHsgZ2V0LCBwb3N0IH0gZnJvbSBcIi4uL2FwaS9BcGlDYWxsc1wiO1xyXG5cclxuaW50ZXJmYWNlIHByb2R1Y3Qge1xyXG4gICAga2V5OiBTdHJpbmcsXHJcbiAgICBpZDogTnVtYmVyLFxyXG4gICAgc2t1OiBTdHJpbmcsXHJcbiAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICBuYW1lX2FyYWJpYzogU3RyaW5nLFxyXG4gICAgaW1hZ2U6IFN0cmluZyxcclxuICAgIHByaWNlOiBudW1iZXIsXHJcbiAgICByZWd1bGFyX3ByaWNlOiBudW1iZXIsXHJcbiAgICBxdWFudGl0eTogbnVtYmVyLFxyXG4gICAgdG90YWxfcXVhbnRpdHk6IG51bWJlcixcclxuICAgIGdpZnRfaWQ6IG51bWJlcixcclxuICAgIGZidF9pZDogbnVtYmVyLFxyXG4gICAgLy8gZGlzY291bnQ6bnVtYmVyLFxyXG4gICAgZGlzY291bnRlZF9hbW91bnQ6IG51bWJlcixcclxuICAgIGdpZnQ6IHByb2R1Y3RbXSxcclxuICAgIGZidDogcHJvZHVjdFtdLFxyXG4gICAgYnJhbmQ6IHt9LFxyXG4gICAgYm9nbzogbnVtYmVyLFxyXG4gICAgcHJlX29yZGVyOiBudW1iZXIsXHJcbiAgICBleHByZXNzOiBib29sZWFuLFxyXG4gICAgZXhwcmVzc19xdHk6IG51bWJlcixcclxuICAgIGV4cHJlc3NfdG90YWxfcXR5OiBudW1iZXIsXHJcbn1cclxuXHJcbmludGVyZmFjZSBmZWVzIHtcclxuICAgIGlkOiBudW1iZXIsXHJcbiAgICB0aXRsZTogc3RyaW5nLFxyXG4gICAgdGl0bGVfYXJhYmljOiBzdHJpbmcsXHJcbiAgICBhbW91bnQ6IGFueVxyXG59XHJcblxyXG5pbnRlcmZhY2UgZGlzY291bnQge1xyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHRpdGxlOiBzdHJpbmcsXHJcbiAgICB0aXRsZV9hcmFiaWM6IHN0cmluZyxcclxuICAgIGFtb3VudDogYW55XHJcbn1cclxuXHJcbmludGVyZmFjZSBjYXJ0IHtcclxuICAgIHByb2R1Y3RzOiBwcm9kdWN0W10sXHJcbiAgICBkaXNjb3VudHM6IHtcclxuICAgICAgICBjb3Vwb246IHt9LFxyXG4gICAgICAgIGRpc2N1b3VudFJ1bGVzOiBmZWVzW10sXHJcbiAgICAgICAgYWRkaXRpb25hbERpc2NvdW50OiB7fSxcclxuICAgIH0sXHJcbiAgICBmZWVzOiB7XHJcbiAgICAgICAgc2hpcHBpbmc6IHt9LFxyXG4gICAgICAgIGV4cHJlc3M6IHt9LFxyXG4gICAgICAgIGZlZTogZmVlc1tdLFxyXG4gICAgICAgIHdyYXBwZXI6IHt9LFxyXG4gICAgICAgIGluc3RhbGxhdGlvbjoge30sXHJcbiAgICAgICAgZG9vcnN0ZXA6IHt9XHJcbiAgICB9LFxyXG4gICAgZXh0cmFkYXRhOiBhbnksXHJcbiAgICBwYXltZW50TWV0aG9kOiBzdHJpbmcsXHJcbiAgICBzaGlwcGluZ0FkZHJlc3M6IGFueSxcclxuICAgIG9yZGVySWQ6IGFueVxyXG59XHJcblxyXG5jb25zdCBlbXB0eUNhcnQgPSAoKTogY2FydCA9PiAoe1xyXG4gICAgcHJvZHVjdHM6IFtdLFxyXG4gICAgZGlzY291bnRzOiB7XHJcbiAgICAgICAgY291cG9uOiB7fSBhcyBkaXNjb3VudCxcclxuICAgICAgICBkaXNjdW91bnRSdWxlczogW10sXHJcbiAgICAgICAgYWRkaXRpb25hbERpc2NvdW50OiB7fSBhcyBkaXNjb3VudFxyXG4gICAgICAgIFxyXG4gICAgfSxcclxuICAgIGZlZXM6IHtcclxuICAgICAgICBzaGlwcGluZzoge30gYXMgZmVlcyxcclxuICAgICAgICBleHByZXNzOiB7fSBhcyBmZWVzLFxyXG4gICAgICAgIGRvb3JzdGVwOiB7fSBhcyBmZWVzLFxyXG4gICAgICAgIGZlZTogW10sXHJcbiAgICAgICAgd3JhcHBlcjoge30gYXMgZmVlcyxcclxuICAgICAgICBpbnN0YWxsYXRpb246IHt9IGFzIGZlZXNcclxuICAgIH0sXHJcbiAgICBleHRyYWRhdGE6IGZhbHNlLFxyXG4gICAgcGF5bWVudE1ldGhvZDogJycsXHJcbiAgICBzaGlwcGluZ0FkZHJlc3M6IGZhbHNlLFxyXG4gICAgb3JkZXJJZDogZmFsc2VcclxufSk7XHJcblxyXG5jb25zdCBjcmVhdGVDYXJ0ID0gPFQgZXh0ZW5kcyBQYXJ0aWFsPGNhcnQ+Pihpbml0aWFsVmFsdWVzOiBUKTogY2FydCAmIFQgPT4ge1xyXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW1wdHlDYXJ0KCksIGluaXRpYWxWYWx1ZXMpO1xyXG59O1xyXG5cclxuY29uc3QgcmVtb3ZlY2hlY2tvdXRkYXRhID0gKCkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhID0gZ2V0Q2FydCgpXHJcbiAgICBjYXJ0ZGF0YS5leHRyYWRhdGEgPSBmYWxzZVxyXG4gICAgY2FydGRhdGEucGF5bWVudE1ldGhvZCA9ICcnXHJcbiAgICBjYXJ0ZGF0YS5zaGlwcGluZ0FkZHJlc3MgPSBmYWxzZVxyXG4gICAgY2FydGRhdGEuZGlzY291bnRzLmNvdXBvbiA9IHt9XHJcbiAgICBjYXJ0ZGF0YS5mZWVzLmV4cHJlc3MgPSB7fVxyXG4gICAgY2FydGRhdGEuZmVlcy5kb29yc3RlcCA9IHt9XHJcbiAgICBjYXJ0ZGF0YS5mZWVzLndyYXBwZXIgPSB7fVxyXG4gICAgY2FydGRhdGEuZmVlcy5pbnN0YWxsYXRpb24gPSB7fVxyXG4gICAgY2FydGRhdGEuZmVlcy5mZWUgPSBbXVxyXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNhcnRkYXRhLnByb2R1Y3RzLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS5leHByZXNzID0gZmFsc2VcclxuICAgIH1cclxuICAgIHNldENhcnQoY2FydGRhdGEpXHJcbiAgICByZXR1cm4gY2FydGRhdGFcclxufVxyXG5jb25zdCBnZXRDYXJ0SXRlbXMgPSBhc3luYyAoKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGE7XHJcbiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NhcnREYXRhJykpIHtcclxuICAgICAgICB2YXIgZDogYW55ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NhcnREYXRhJylcclxuICAgICAgICB2YXIgZGVjb2RlZGF0YSA9IEJ1ZmZlci5mcm9tKGQsICdiYXNlNjQnKS50b1N0cmluZyhcInV0Zi04XCIpXHJcbiAgICAgICAgY2FydGRhdGEgPSBKU09OLnBhcnNlKGRlY29kZWRhdGEpIGFzIGNhcnQ7XHJcbiAgICB9XHJcbiAgICBlbHNlXHJcbiAgICAgICAgY2FydGRhdGEgPSBjcmVhdGVDYXJ0KHsgcHJvZHVjdHM6IFtdIH0pO1xyXG4gICAgcmV0dXJuIGNhcnRkYXRhLnByb2R1Y3RzO1xyXG59XHJcblxyXG5jb25zdCBzZWFyY2hJdGVtID0gKGFycmF5OiBhbnksIGRhdGE6IGFueSkgPT4ge1xyXG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGFycmF5KS5maW5kKGtleSA9PiBhcnJheVtrZXldLmlkID09PSBkYXRhLmlkICYmIGFycmF5W2tleV0ucHJpY2UgPT09IGRhdGEucHJpY2UgJiYgZGF0YS5naWZ0Lmxlbmd0aCA9PSBhcnJheVtrZXldLmdpZnQubGVuZ3RoICYmIGFycmF5W2tleV0uZ2lmdC5tYXAoZnVuY3Rpb24gKGE6IGFueSkgeyByZXR1cm4gYS5pZDsgfSkuZmlsdGVyKChlbGVtZW50OiBhbnkpID0+IGRhdGEuZ2lmdC5tYXAoZnVuY3Rpb24gKGE6IGFueSkgeyByZXR1cm4gYS5pZDsgfSkuaW5jbHVkZXMoZWxlbWVudCkpLmxlbmd0aCA9PSBkYXRhLmdpZnQubGVuZ3RoKTtcclxufVxyXG5cclxuY29uc3QgcmVtb3ZlQ2FydCA9ICgpID0+IHtcclxuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdjYXJ0RGF0YScpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gZmFsc2VcclxufVxyXG5cclxuY29uc3QgcmVtb3ZlQ2FydEl0ZW0gPSAoa2V5OiBudW1iZXIpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YSA9IGdldENhcnQoKTtcclxuICAgIGNhcnRkYXRhLnByb2R1Y3RzLnNwbGljZShrZXksIDEpXHJcbiAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgc2V0RGlzY291bnRSdWxlKClcclxuICAgIHNldERpc2NvdW50UnVsZUJvZ28oKVxyXG4gICAgcmV0dXJuIGNhcnRkYXRhO1xyXG59XHJcblxyXG5jb25zdCByZW1vdmVDYXJ0SXRlbUZidCA9IChwcm9rZXk6IG51bWJlciwgZmJ0a2V5OiBudW1iZXIpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YSA9IGdldENhcnQoKTtcclxuICAgIGNhcnRkYXRhLnByb2R1Y3RzW3Byb2tleV0/LmZidD8uc3BsaWNlKGZidGtleSwgMSlcclxuICAgIHNldENhcnQoY2FydGRhdGEpXHJcbiAgICByZXR1cm4gY2FydGRhdGE7XHJcbn1cclxuXHJcbmNvbnN0IHVwZGF0ZUNhcnRJdGVtRmJ0UXR5ID0gKHF0eTogbnVtYmVyICxwcm9rZXk6IG51bWJlciwgZmJ0a2V5OiBudW1iZXIpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgaWYgKGNhcnRkYXRhLnByb2R1Y3RzICYmIGNhcnRkYXRhLnByb2R1Y3RzW3Byb2tleV0gJiYgY2FydGRhdGEucHJvZHVjdHNbcHJva2V5XS5mYnQgJiYgY2FydGRhdGEucHJvZHVjdHNbcHJva2V5XS5mYnRbZmJ0a2V5XSkge1xyXG4gICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW3Byb2tleV0uZmJ0W2ZidGtleV0ucXVhbnRpdHkgPSBxdHk7XHJcbiAgICB9XHJcbiAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgcmV0dXJuIGNhcnRkYXRhO1xyXG59XHJcblxyXG5jb25zdCByZW1vdmVCb2dvID0gKGNhcnRkYXRhOiBhbnkpID0+IHtcclxuICAgIC8vIHZhciBjYXJ0ZGF0YSA9IGdldENhcnQoKTtcclxuICAgIC8vIGNhcnRkYXRhLnByb2R1Y3RzLnNwbGljZShrZXksMSlcclxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXJ0ZGF0YS5wcm9kdWN0cy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICBjb25zdCBlbGVtZW50ID0gY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdO1xyXG4gICAgICAgIGlmIChlbGVtZW50LmJvZ28pIHtcclxuICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHMuc3BsaWNlKGluZGV4LCAxKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIHNldENhcnQoY2FydGRhdGEpXHJcbiAgICByZXR1cm4gY2FydGRhdGE7XHJcbn1cclxuXHJcbmNvbnN0IGdldENhcnQgPSAoKSA9PiB7XHJcbiAgICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY2FydGV4cGlyeVwiKSkge1xyXG4gICAgICAgIHJlbW92ZUNhcnQoKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCBjYXJ0ZXhwaXJ5OiBhbnkgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImNhcnRleHBpcnlcIik7XHJcbiAgICAgICAgaWYgKERhdGUubm93KCkgPiBjYXJ0ZXhwaXJ5KSB7XHJcbiAgICAgICAgICAgIHJlbW92ZUNhcnQoKVxyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcImNhcnRleHBpcnlcIilcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyByZW1vdmVDYXJ0KClcclxuICAgIHZhciBjYXJ0ZGF0YTtcclxuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY2FydERhdGEnKSkge1xyXG4gICAgICAgIHZhciBkOiBhbnkgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY2FydERhdGEnKVxyXG4gICAgICAgIHZhciBkZWNvZGVkYXRhID0gQnVmZmVyLmZyb20oZCwgJ2Jhc2U2NCcpLnRvU3RyaW5nKFwidXRmLThcIilcclxuICAgICAgICBjYXJ0ZGF0YSA9IEpTT04ucGFyc2UoZGVjb2RlZGF0YSkgYXMgY2FydDtcclxuICAgIH1cclxuICAgIGVsc2VcclxuICAgICAgICBjYXJ0ZGF0YSA9IGNyZWF0ZUNhcnQoeyBwcm9kdWN0czogW10gfSk7XHJcbiAgICByZXR1cm4gY2FydGRhdGE7XHJcbn1cclxuXHJcbmNvbnN0IGluY3JlYXNlUXR5ID0gKGNhcnRkYXRhOiBjYXJ0LCBxdHk6IG51bWJlciwga2V5OiBudW1iZXIsIHNldGRhdGEgPSBmYWxzZSkgPT4ge1xyXG4gICAgaWYgKGNhcnRkYXRhLnByb2R1Y3RzW2tleV0udG90YWxfcXVhbnRpdHkgPj0gcXR5KVxyXG4gICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2tleV0ucXVhbnRpdHkgPSBxdHlcclxuICAgIGVsc2VcclxuICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1trZXldLnF1YW50aXR5ID0gY2FydGRhdGEucHJvZHVjdHNba2V5XS50b3RhbF9xdWFudGl0eVxyXG4gICAgaWYgKGNhcnRkYXRhLnByb2R1Y3RzW2tleV0uZ2lmdCkge1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXJ0ZGF0YS5wcm9kdWN0c1trZXldLmdpZnQubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgIGlmIChjYXJ0ZGF0YS5wcm9kdWN0c1trZXldLnRvdGFsX3F1YW50aXR5ID49IHF0eSlcclxuICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2tleV0uZ2lmdFtpbmRleF0ucXVhbnRpdHkgPSBxdHlcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNba2V5XS5naWZ0W2luZGV4XS5xdWFudGl0eSA9IGNhcnRkYXRhLnByb2R1Y3RzW2tleV0udG90YWxfcXVhbnRpdHlcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoc2V0ZGF0YSlcclxuICAgICAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgcmV0dXJuIGNhcnRkYXRhO1xyXG59XHJcblxyXG5jb25zdCBhZGRCb2dvID0gKGRhdGE6IFtwcm9kdWN0XSwgY2FydGRhdGE6IGFueSkgPT4ge1xyXG4gICAgLy8gdmFyIGtleSA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMTYpLnNsaWNlKDIpXHJcbiAgICAvLyBkYXRhLmtleSA9IGtleVxyXG4gICAgLy92YXIgY2FydGRhdGEgPSBnZXRDYXJ0KCk7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhjYXJ0ZGF0YS5wcm9kdWN0cylcclxuICAgIGNhcnRkYXRhLnByb2R1Y3RzID0gY2FydGRhdGEucHJvZHVjdHMuY29uY2F0KGRhdGEpXHJcbiAgICByZXR1cm4gY2FydGRhdGFcclxufVxyXG5cclxuY29uc3QgYWRkZmJ0ZXh0cmFpdGVtID0gYXN5bmMgKGRhdGE6IHByb2R1Y3QsIGZidDogW3Byb2R1Y3RdKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGEgPSBnZXRDYXJ0KCk7XHJcbiAgICB2YXIgY2hlY2t0RGF0YTogYW55ID0gc2VhcmNoSXRlbShjYXJ0ZGF0YS5wcm9kdWN0cywgZGF0YSlcclxuICAgIGlmIChjaGVja3REYXRhKSB7XHJcbiAgICAgICAgaWYgKGZidC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdmFyIG5ld2ZidCA9IChjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnQubGVuZ3RoKSA/IGNhcnRkYXRhLnByb2R1Y3RzW2NoZWNrdERhdGFdLmZidCA6IFtdXHJcbiAgICAgICAgICAgIGlmIChuZXdmYnQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZmJ0Lmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBmYnRbaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjaGVja3REYXRhZmJ0OiBhbnkgPSBPYmplY3Qua2V5cyhjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnQpLmZpbmQoKGtleTogYW55KSA9PiBjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnRba2V5XS5pZCA9PT0gZWxlbWVudC5pZCAmJiBjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnRba2V5XS5wcmljZSA9PT0gZWxlbWVudC5wcmljZSlcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY2hlY2t0RGF0YWZidCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FydGRhdGEucHJvZHVjdHNbY2hlY2t0RGF0YV0uZmJ0W2NoZWNrdERhdGFmYnRdLnRvdGFsX3F1YW50aXR5ID49IChjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnRbY2hlY2t0RGF0YWZidF0ucXVhbnRpdHkgKyBlbGVtZW50LnF1YW50aXR5KSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2NoZWNrdERhdGFdLmZidFtjaGVja3REYXRhZmJ0XS5xdWFudGl0eSArPSBlbGVtZW50LnF1YW50aXR5XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2NoZWNrdERhdGFdLmZidFtjaGVja3REYXRhZmJ0XS5xdWFudGl0eSA9IGNhcnRkYXRhLnByb2R1Y3RzW2NoZWNrdERhdGFdLmZidFtjaGVja3REYXRhZmJ0XS50b3RhbF9xdWFudGl0eVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNbY2hlY2t0RGF0YV0uZmJ0LnB1c2goZWxlbWVudClcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnQgPSBmYnRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNldENhcnQoY2FydGRhdGEpXHJcbn1cclxuXHJcbmNvbnN0IHNldENhcnRJdGVtcyA9IGFzeW5jIChkYXRhOiBwcm9kdWN0LCBnaWZ0OiBbcHJvZHVjdF0sIGZidDogW3Byb2R1Y3RdKSA9PiB7XHJcbiAgICB2YXIga2V5ID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygxNikuc2xpY2UoMilcclxuICAgIGRhdGEua2V5ID0ga2V5XHJcbiAgICBpZiAoZ2lmdCkge1xyXG4gICAgICAgIGRhdGEuZ2lmdCA9IGdpZnRcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGRhdGEuZ2lmdCA9IFtdXHJcbiAgICB9XHJcbiAgICBpZiAoZmJ0KSB7XHJcbiAgICAgICAgZGF0YS5mYnQgPSBmYnRcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGRhdGEuZmJ0ID0gW11cclxuICAgIH1cclxuICAgIHZhciBjYXJ0ZGF0YSA9IGdldENhcnQoKTtcclxuICAgIHZhciBjaGVja3REYXRhOiBhbnkgPSBzZWFyY2hJdGVtKGNhcnRkYXRhLnByb2R1Y3RzLCBkYXRhKVxyXG4gICAgaWYgKGNoZWNrdERhdGEpIHtcclxuICAgICAgICBjYXJ0ZGF0YSA9IGluY3JlYXNlUXR5KGNhcnRkYXRhLCBjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5xdWFudGl0eSArIGRhdGEucXVhbnRpdHksIGNoZWNrdERhdGEpO1xyXG4gICAgICAgIGlmIChkYXRhLmZidC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdmFyIG5ld2ZidCA9IChjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnQubGVuZ3RoKSA/IGNhcnRkYXRhLnByb2R1Y3RzW2NoZWNrdERhdGFdLmZidCA6IFtdXHJcbiAgICAgICAgICAgIGlmIChuZXdmYnQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZGF0YS5mYnQubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGRhdGEuZmJ0W2luZGV4XTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgY2hlY2t0RGF0YWZidDogYW55ID0gT2JqZWN0LmtleXMoY2FydGRhdGEucHJvZHVjdHNbY2hlY2t0RGF0YV0uZmJ0KS5maW5kKChrZXk6IGFueSkgPT4gY2FydGRhdGEucHJvZHVjdHNbY2hlY2t0RGF0YV0uZmJ0W2tleV0uaWQgPT09IGVsZW1lbnQuaWQgJiYgY2FydGRhdGEucHJvZHVjdHNbY2hlY2t0RGF0YV0uZmJ0W2tleV0ucHJpY2UgPT09IGVsZW1lbnQucHJpY2UpXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrdERhdGFmYnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhcnRkYXRhLnByb2R1Y3RzW2NoZWNrdERhdGFdLmZidFtjaGVja3REYXRhZmJ0XS50b3RhbF9xdWFudGl0eSA+PSAoY2FydGRhdGEucHJvZHVjdHNbY2hlY2t0RGF0YV0uZmJ0W2NoZWNrdERhdGFmYnRdLnF1YW50aXR5ICsgZWxlbWVudC5xdWFudGl0eSkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnRbY2hlY2t0RGF0YWZidF0ucXVhbnRpdHkgKz0gZWxlbWVudC5xdWFudGl0eVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnRbY2hlY2t0RGF0YWZidF0ucXVhbnRpdHkgPSBjYXJ0ZGF0YS5wcm9kdWN0c1tjaGVja3REYXRhXS5mYnRbY2hlY2t0RGF0YWZidF0udG90YWxfcXVhbnRpdHlcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2NoZWNrdERhdGFdLmZidC5wdXNoKGVsZW1lbnQpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNbY2hlY2t0RGF0YV0uZmJ0ID0gZGF0YS5mYnRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGVsc2VcclxuICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0cy5wdXNoKGRhdGEpXHJcbiAgICBzZXRDYXJ0KGNhcnRkYXRhLCB0cnVlKVxyXG4gICAgc2V0RGlzY291bnRSdWxlKClcclxuICAgIHNldERpc2NvdW50UnVsZUJvZ28oKVxyXG59XHJcblxyXG5jb25zdCBzZXRDYXJ0RXhwaXJ5ID0gKCkgPT4ge1xyXG4gICAgdmFyIGFkZGV4cGlyeXRpbWUgPSA0MzIwMDAwMDtcclxuICAgIC8vIHZhciBhZGRleHBpcnl0aW1lID0gNjAwMDA7XHJcbiAgICBjb25zdCBjYWNoZUV4cGlyZURhdGU6IGFueSA9IERhdGUubm93KCkgKyBhZGRleHBpcnl0aW1lO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjYXJ0ZXhwaXJ5XCIsIGNhY2hlRXhwaXJlRGF0ZSk7XHJcbn1cclxuXHJcbmNvbnN0IHNldENhcnQgPSAoY2FydGRhdGE6IGNhcnQsIGNhY2hlOiBhbnkgPSBmYWxzZSkgPT4ge1xyXG4gICAgY29uc3QgbXlKU09OID0gSlNPTi5zdHJpbmdpZnkoY2FydGRhdGEpO1xyXG4gICAgbGV0IG9iakpzb25CNjQgPSBCdWZmZXIuZnJvbShteUpTT04pLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NhcnREYXRhJywgb2JqSnNvbkI2NClcclxuICAgIGlmIChjYWNoZSkge1xyXG4gICAgICAgIHNldENhcnRFeHBpcnkoKVxyXG4gICAgfVxyXG5cclxuICAgIHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnY2FydERhdGFDaGFuZ2VkJywge1xyXG4gICAgICAgIGRldGFpbDoge1xyXG4gICAgICAgICAgICBjYXJ0RGF0YTogb2JqSnNvbkI2NFxyXG4gICAgICAgIH1cclxuICAgIH0pKTtcclxufVxyXG5cclxuY29uc3QgZ2V0Q2FydENvdW50ID0gKCkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGNvdW50ID0gY2FydGRhdGEucHJvZHVjdHMubGVuZ3RoXHJcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY2FydGRhdGEucHJvZHVjdHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XTtcclxuICAgICAgICBpZiAoZWxlbWVudC5naWZ0Py5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBjb3VudCArPSBlbGVtZW50LmdpZnQ/Lmxlbmd0aFxyXG4gICAgICAgIGlmIChlbGVtZW50LmZidD8ubGVuZ3RoID4gMClcclxuICAgICAgICAgICAgY291bnQgKz0gZWxlbWVudC5mYnQ/Lmxlbmd0aFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNvdW50O1xyXG59XHJcblxyXG5mdW5jdGlvbiBjYWxjdWxhdGVUaW1lTGVmdChlbmRUaW1lOiBhbnkpIHtcclxuICAgIGNvbnN0IG5vdzogYW55ID0gbmV3IERhdGUoKTtcclxuICAgIGNvbnN0IGVuZDogYW55ID0gbmV3IERhdGUoZW5kVGltZSk7XHJcbiAgICBjb25zdCBkaWZmZXJlbmNlOiBhbnkgPSBlbmQgLSBub3c7XHJcblxyXG4gICAgaWYgKGRpZmZlcmVuY2UgPD0gMCkge1xyXG4gICAgICByZXR1cm4geyBleHBpcmVkOiB0cnVlIH07XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaG91cnM6IE1hdGguZmxvb3IoKGRpZmZlcmVuY2UgLyAoMTAwMCAqIDYwICogNjApKSAlIDI0KSxcclxuICAgICAgbWludXRlczogTWF0aC5mbG9vcigoZGlmZmVyZW5jZSAvIDEwMDAgLyA2MCkgJSA2MCksXHJcbiAgICAgIHNlY29uZHM6IE1hdGguZmxvb3IoKGRpZmZlcmVuY2UgLyAxMDAwKSAlIDYwKSxcclxuICAgICAgZXhwaXJlZDogZmFsc2VcclxuICAgIH07XHJcbn1cclxuXHJcbmNvbnN0IGdldFN1YnRvdGFsID0gKCkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGFtb3VudCA9IDBcclxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXJ0ZGF0YS5wcm9kdWN0cy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICBjb25zdCBlbGVtZW50ID0gY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdO1xyXG5cclxuICAgICAgICBpZiAoZWxlbWVudC5ib2dvKVxyXG4gICAgICAgICAgICBhbW91bnQgKz0gZWxlbWVudC5xdWFudGl0eSAqIGVsZW1lbnQucmVndWxhcl9wcmljZVxyXG4gICAgICAgIC8vIGFtb3VudCArPSBlbGVtZW50LnF1YW50aXR5ICogZWxlbWVudC5kaXNjb3VudGVkX2Ftb3VudFxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgYW1vdW50ICs9IGVsZW1lbnQucXVhbnRpdHkgKiBlbGVtZW50LnJlZ3VsYXJfcHJpY2VcclxuICAgICAgICAvLyBhbW91bnQgKz0gZWxlbWVudC5xdWFudGl0eSAqIGVsZW1lbnQucHJpY2VcclxuICAgICAgICBmb3IgKGxldCBnID0gMDsgZyA8IGVsZW1lbnQ/LmdpZnQ/Lmxlbmd0aDsgZysrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRnaWZ0ID0gZWxlbWVudD8uZ2lmdFtnXTtcclxuICAgICAgICAgICAgYW1vdW50ICs9IGVsZW1lbnRnaWZ0LnF1YW50aXR5ICogZWxlbWVudGdpZnQucmVndWxhcl9wcmljZVxyXG4gICAgICAgICAgICAvLyBhbW91bnQgKz0gZWxlbWVudGdpZnQucXVhbnRpdHkgKiBlbGVtZW50Z2lmdC5kaXNjb3VudGVkX2Ftb3VudFxyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKGxldCBmID0gMDsgZiA8IGVsZW1lbnQ/LmZidD8ubGVuZ3RoOyBmKyspIHtcclxuICAgICAgICAgICAgY29uc3QgZWxlbWVudGZidCA9IGVsZW1lbnQ/LmZidFtmXTtcclxuICAgICAgICAgICAgYW1vdW50ICs9IGVsZW1lbnRmYnQucXVhbnRpdHkgKiBlbGVtZW50ZmJ0LnJlZ3VsYXJfcHJpY2VcclxuICAgICAgICAgICAgLy8gYW1vdW50ICs9IGVsZW1lbnRmYnQucXVhbnRpdHkgKiBlbGVtZW50ZmJ0LmRpc2NvdW50ZWRfYW1vdW50XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFtb3VudDtcclxufVxyXG5cclxuY29uc3QgZ2V0U3VidG90YWxTYWxlID0gKCkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGFtb3VudCA9IDBcclxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXJ0ZGF0YS5wcm9kdWN0cy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICBjb25zdCBlbGVtZW50ID0gY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdO1xyXG5cclxuICAgICAgICBpZiAoZWxlbWVudC5ib2dvKVxyXG4gICAgICAgICAgICBhbW91bnQgKz0gZWxlbWVudC5xdWFudGl0eSAqIGVsZW1lbnQuZGlzY291bnRlZF9hbW91bnRcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIGFtb3VudCArPSBlbGVtZW50LnF1YW50aXR5ICogZWxlbWVudC5wcmljZVxyXG4gICAgICAgIGZvciAobGV0IGcgPSAwOyBnIDwgZWxlbWVudD8uZ2lmdD8ubGVuZ3RoOyBnKyspIHtcclxuICAgICAgICAgICAgY29uc3QgZWxlbWVudGdpZnQgPSBlbGVtZW50Py5naWZ0W2ddO1xyXG4gICAgICAgICAgICBhbW91bnQgKz0gZWxlbWVudGdpZnQucXVhbnRpdHkgKiBlbGVtZW50Z2lmdC5kaXNjb3VudGVkX2Ftb3VudFxyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IgKGxldCBmID0gMDsgZiA8IGVsZW1lbnQ/LmZidD8ubGVuZ3RoOyBmKyspIHtcclxuICAgICAgICAgICAgY29uc3QgZWxlbWVudGZidCA9IGVsZW1lbnQ/LmZidFtmXTtcclxuICAgICAgICAgICAgYW1vdW50ICs9IGVsZW1lbnRmYnQucXVhbnRpdHkgKiBlbGVtZW50ZmJ0LmRpc2NvdW50ZWRfYW1vdW50XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFtb3VudDtcclxufVxyXG5cclxuY29uc3QgZ2V0U2F2ZUFtb3VudCA9ICgpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YSA9IGdldENhcnQoKTtcclxuICAgIHZhciBhbW91bnQgPSAwXHJcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY2FydGRhdGEucHJvZHVjdHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XTtcclxuICAgICAgICBpZiAoZWxlbWVudC5ib2dvKVxyXG4gICAgICAgICAgICBhbW91bnQgKz0gKGVsZW1lbnQucXVhbnRpdHkgKiBlbGVtZW50LnJlZ3VsYXJfcHJpY2UpIC0gKGVsZW1lbnQucXVhbnRpdHkgKiBlbGVtZW50LmRpc2NvdW50ZWRfYW1vdW50KVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgYW1vdW50ICs9IChlbGVtZW50LnF1YW50aXR5ICogZWxlbWVudC5yZWd1bGFyX3ByaWNlKSAtIChlbGVtZW50LnF1YW50aXR5ICogZWxlbWVudC5wcmljZSlcclxuICAgICAgICBpZiAoZWxlbWVudD8uZ2lmdCkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBnID0gMDsgZyA8IGVsZW1lbnQ/LmdpZnQubGVuZ3RoOyBnKyspIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRnaWZ0ID0gZWxlbWVudD8uZ2lmdFtnXTtcclxuICAgICAgICAgICAgICAgIGFtb3VudCArPSAoZWxlbWVudGdpZnQucXVhbnRpdHkgKiBlbGVtZW50Z2lmdC5yZWd1bGFyX3ByaWNlKSAtIChlbGVtZW50Z2lmdC5xdWFudGl0eSAqIGVsZW1lbnRnaWZ0LmRpc2NvdW50ZWRfYW1vdW50KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChlbGVtZW50Py5mYnQpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgZiA9IDA7IGYgPCBlbGVtZW50Py5mYnQubGVuZ3RoOyBmKyspIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRmYnQgPSBlbGVtZW50Py5mYnRbZl07XHJcbiAgICAgICAgICAgICAgICBhbW91bnQgKz0gKGVsZW1lbnRmYnQucXVhbnRpdHkgKiBlbGVtZW50ZmJ0LnJlZ3VsYXJfcHJpY2UpIC0gKGVsZW1lbnRmYnQucXVhbnRpdHkgKiBlbGVtZW50ZmJ0LmRpc2NvdW50ZWRfYW1vdW50KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKGdldERpc2NvdW50ZXMoKS5hbW91bnQpIHtcclxuICAgICAgICBhbW91bnQgKz0gZ2V0RGlzY291bnRlcygpLmFtb3VudFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFtb3VudDtcclxufVxyXG5cclxuY29uc3QgZ2V0U2hpcHBpbmdBZGRyZXNzID0gKCkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhOiBhbnkgPSBnZXRDYXJ0KCk7XHJcbiAgICByZXR1cm4gY2FydGRhdGEuc2hpcHBpbmdBZGRyZXNzXHJcbn1cclxuXHJcbmNvbnN0IHNldFNoaXBwaW5nQWRkcmVzcyA9IChpZDogYW55KSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGE6IGFueSA9IGdldENhcnQoKTtcclxuICAgIGNhcnRkYXRhLnNoaXBwaW5nQWRkcmVzcyA9IGlkXHJcbiAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgcmV0dXJuIGNhcnRkYXRhXHJcbn1cclxuXHJcbmNvbnN0IGdldFBheW1lbnRNZXRob2QgPSAoKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGE6IGFueSA9IGdldENhcnQoKTtcclxuICAgIHJldHVybiBjYXJ0ZGF0YS5wYXltZW50TWV0aG9kXHJcbn1cclxuXHJcbmNvbnN0IHNldFBheW1lbnRNZXRob2QgPSAoaWQ6IGFueSkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhOiBhbnkgPSBnZXRDYXJ0KCk7XHJcbiAgICBjYXJ0ZGF0YS5wYXltZW50TWV0aG9kID0gaWRcclxuICAgIHNldENhcnQoY2FydGRhdGEpXHJcbn1cclxuXHJcbmNvbnN0IGdldFNoaXBwaW5nID0gKCkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhOiBhbnkgPSBnZXRDYXJ0KCk7XHJcbiAgICB2YXIgYW1vdW50ID0gMDtcclxuICAgIGlmIChjYXJ0ZGF0YS5mZWVzLnNoaXBwaW5nKSB7XHJcbiAgICAgICAgYW1vdW50ICs9IGNhcnRkYXRhLmZlZXMuc2hpcHBpbmcuYW1vdW50O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFtb3VudDtcclxufVxyXG5cclxuXHJcbmNvbnN0IHNldEluc3RhbGxhdGlvbiA9IChxdHk6IG51bWJlcikgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhOiBhbnkgPSBnZXRDYXJ0KCk7XHJcbiAgICB2YXIgZmVlc2RhdGE6IGFueSA9IHtcclxuICAgICAgICBpZDogMCxcclxuICAgICAgICB0aXRsZTogJ0luc3RhbGxhdGlvbiBDb3N0JyxcclxuICAgICAgICB0aXRsZV9hcmFiaWM6ICfYqtmD2YTZgdmA2Kkg2KfZhNiq2LrZgNmA2YTZitmA2YEnLFxyXG4gICAgICAgIGFtb3VudDogcXR5ICogOTUsXHJcbiAgICB9XHJcbiAgICBjYXJ0ZGF0YS5mZWVzLmluc3RhbGxhdGlvbiA9IGZlZXNkYXRhIGFzIGZlZXNcclxuICAgIHNldENhcnQoY2FydGRhdGEpO1xyXG59XHJcbmNvbnN0IGdldEluc3RhbGxhdGlvbiA9ICgpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGFtb3VudCA9IDA7XHJcbiAgICBpZiAoY2FydGRhdGEuZmVlcy5pbnN0YWxsYXRpb24pIHtcclxuICAgICAgICBhbW91bnQgKz0gY2FydGRhdGEuZmVlcy5pbnN0YWxsYXRpb24uYW1vdW50O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFtb3VudDtcclxufVxyXG5jb25zdCB1bnNldEluc3RhbGxhdGlvbiA9ICgpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgY2FydGRhdGEuZmVlcy5pbnN0YWxsYXRpb24gPSB7fSBhcyBmZWVzO1xyXG4gICAgc2V0Q2FydChjYXJ0ZGF0YSlcclxuICAgIHJldHVybiBjYXJ0ZGF0YTtcclxufVxyXG5cclxuXHJcbmNvbnN0IHNldFdyYXBwZXIgPSAoKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGE6IGFueSA9IGdldENhcnQoKTtcclxuICAgIHZhciBmZWVzZGF0YTogYW55ID0ge1xyXG4gICAgICAgIGlkOiAwLFxyXG4gICAgICAgIHRpdGxlOiAnUGFja2FnaW5nIENvc3QnLFxyXG4gICAgICAgIHRpdGxlX2FyYWJpYzogJ9iq2YPZhNmB2YDYqSDYp9mE2KrYutmA2YDZhNmK2YDZgScsXHJcbiAgICAgICAgYW1vdW50OiA5NSxcclxuICAgIH1cclxuICAgIGNhcnRkYXRhLmZlZXMud3JhcHBlciA9IGZlZXNkYXRhIGFzIGZlZXNcclxuICAgIHNldENhcnQoY2FydGRhdGEpO1xyXG59XHJcbmNvbnN0IGdldFdyYXBwZXIgPSAoKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGE6IGFueSA9IGdldENhcnQoKTtcclxuICAgIHZhciBhbW91bnQgPSAwO1xyXG4gICAgaWYgKGNhcnRkYXRhLmZlZXMud3JhcHBlcikge1xyXG4gICAgICAgIGFtb3VudCArPSBjYXJ0ZGF0YS5mZWVzLndyYXBwZXIuYW1vdW50O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFtb3VudDtcclxufVxyXG5jb25zdCB1bnNldFdyYXBwZXIgPSAoKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGE6IGFueSA9IGdldENhcnQoKTtcclxuICAgIGNhcnRkYXRhLmZlZXMud3JhcHBlciA9IHt9IGFzIGZlZXM7XHJcbiAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgcmV0dXJuIGNhcnRkYXRhO1xyXG59XHJcbmNvbnN0IGdldERpc2NvdW50ZXMgPSAoKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGEgPSBnZXRDYXJ0KCk7XHJcbiAgICB2YXIgYW1vdW50OiBhbnkgPSAwO1xyXG4gICAgdmFyIHN1bW1hcnk6IGFueSA9IFtdXHJcbiAgICBpZiAoY2FydGRhdGEuZGlzY291bnRzLmRpc2N1b3VudFJ1bGVzKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNhcnRkYXRhLmRpc2NvdW50cy5kaXNjdW91bnRSdWxlcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGNhcnRkYXRhLmRpc2NvdW50cy5kaXNjdW91bnRSdWxlc1tpbmRleF07XHJcbiAgICAgICAgICAgIC8vIHN1bW1hcnkucHVzaCh7IGtleTogZWxlbWVudC50aXRsZSwgcHJpY2U6ICctICcgKyBwYXJzZUZsb2F0KGVsZW1lbnQuYW1vdW50KS50b0ZpeGVkKDIpLCB0aXRsZTogZWxlbWVudC50aXRsZSwgdGl0bGVfYXJhYmljOiBlbGVtZW50LnRpdGxlX2FyYWJpYyB9KVxyXG4gICAgICAgICAgICBzdW1tYXJ5LnB1c2goeyBrZXk6ICdkaXNjb3VudFJ1bGUnLCBwcmljZTogJy0gJyArIHBhcnNlRmxvYXQoZWxlbWVudC5hbW91bnQpLnRvRml4ZWQoMiksIHRpdGxlOiBlbGVtZW50LnRpdGxlLCB0aXRsZV9hcmFiaWM6IGVsZW1lbnQudGl0bGVfYXJhYmljIH0pXHJcbiAgICAgICAgICAgIGFtb3VudCArPSBOdW1iZXIocGFyc2VGbG9hdChlbGVtZW50LmFtb3VudCkudG9GaXhlZCgyKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHsgYW1vdW50OiBhbW91bnQsIHN1bW1hcnk6IHN1bW1hcnkgfTtcclxufVxyXG5cclxuY29uc3QgZ2V0QWRkaXRpb25hbERpc2NvdW50ID0gKCkgPT4ge1xyXG4gICAgLy8gc2V0QWRkaXRpb25hbERpc2NvdW50KClcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGFtb3VudERhdGEgPSB7fSBhcyBkaXNjb3VudDtcclxuICAgIGlmIChjYXJ0ZGF0YS5kaXNjb3VudHMuYWRkaXRpb25hbERpc2NvdW50KSB7XHJcbiAgICAgICAgYW1vdW50RGF0YSA9IGNhcnRkYXRhLmRpc2NvdW50cy5hZGRpdGlvbmFsRGlzY291bnQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYW1vdW50RGF0YTtcclxufVxyXG5cclxuY29uc3QgZ2V0RXh0cmFGZWVzID0gKCkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGFtb3VudDogYW55ID0gMDtcclxuICAgIHZhciBzdW1tYXJ5OiBhbnkgPSBbXVxyXG4gICAgaWYgKGNhcnRkYXRhLmZlZXMuZmVlKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNhcnRkYXRhLmZlZXMuZmVlLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gY2FydGRhdGEuZmVlcy5mZWVbaW5kZXhdO1xyXG4gICAgICAgICAgICBzdW1tYXJ5LnB1c2goeyBrZXk6IGVsZW1lbnQudGl0bGUsIHRpdGxlOiBlbGVtZW50LnRpdGxlLCB0aXRsZV9hcmFiaWM6IGVsZW1lbnQudGl0bGVfYXJhYmljLCBwcmljZTogJy0gJyArIHBhcnNlRmxvYXQoZWxlbWVudC5hbW91bnQpLnRvRml4ZWQoMikgfSlcclxuICAgICAgICAgICAgYW1vdW50ICs9IE51bWJlcihwYXJzZUZsb2F0KGVsZW1lbnQuYW1vdW50KS50b0ZpeGVkKDIpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyBhbW91bnQ6IGFtb3VudCwgc3VtbWFyeTogc3VtbWFyeSB9O1xyXG59XHJcblxyXG5jb25zdCBnZXRUb3RhbCA9ICgpID0+IHtcclxuICAgIHZhciB0b3RhbCA9IGdldFN1YnRvdGFsKCk7XHJcbiAgICB0b3RhbCAtPSBnZXRTYXZlQW1vdW50KCk7XHJcbiAgICB2YXIgY2FydGRhdGEgPSBnZXRDYXJ0KCk7XHJcbiAgICBpZiAoZ2V0U2hpcHBpbmcoKSkge1xyXG4gICAgICAgIHRvdGFsICs9IGdldFNoaXBwaW5nKCk7XHJcbiAgICB9XHJcbiAgICBpZiAoZ2V0V3JhcHBlcigpKSB7XHJcbiAgICAgICAgdG90YWwgKz0gZ2V0V3JhcHBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChnZXRJbnN0YWxsYXRpb24oKSkge1xyXG4gICAgICAgIHRvdGFsICs9IGdldEluc3RhbGxhdGlvbigpO1xyXG4gICAgfVxyXG4gICAgLy8gaWYgKGdldERpc2NvdW50ZXMoKS5hbW91bnQpIHtcclxuICAgIC8vICAgICB0b3RhbCA9IGdldERpc2NvdW50ZXMoKS5hbW91bnRcclxuICAgIC8vIH1cclxuICAgIGlmIChnZXRDb3Vwb24oKS5hbW91bnQpIHtcclxuICAgICAgICB0b3RhbCAtPSBOdW1iZXIocGFyc2VGbG9hdChnZXRDb3Vwb24oKS5hbW91bnQpLnRvRml4ZWQoMikpXHJcbiAgICB9XHJcbiAgICBpZiAoZ2V0QWRkaXRpb25hbERpc2NvdW50KCkuYW1vdW50KSB7XHJcbiAgICAgICAgdG90YWwgLT0gTnVtYmVyKHBhcnNlRmxvYXQoZ2V0QWRkaXRpb25hbERpc2NvdW50KCkuYW1vdW50KS50b0ZpeGVkKDIpKVxyXG4gICAgfVxyXG4gICAgaWYgKGdldEV4cHJlc3NEZWxpdmVyeSgpLmFtb3VudCkge1xyXG4gICAgICAgIHRvdGFsICs9IE51bWJlcihwYXJzZUZsb2F0KGdldEV4cHJlc3NEZWxpdmVyeSgpLmFtb3VudCkudG9GaXhlZCgyKSlcclxuICAgIH1cclxuICAgIGlmIChnZXREb29yU3RlcCgpLmFtb3VudCkge1xyXG4gICAgICAgIHRvdGFsICs9IE51bWJlcihwYXJzZUZsb2F0KGdldERvb3JTdGVwKCkuYW1vdW50KS50b0ZpeGVkKDIpKVxyXG4gICAgfVxyXG4gICAgaWYgKGdldEV4dHJhRmVlcygpLmFtb3VudCkge1xyXG4gICAgICAgIHRvdGFsICs9IGdldEV4dHJhRmVlcygpLmFtb3VudFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvdGFsO1xyXG59XHJcblxyXG5jb25zdCBnZXRTdW1tYXJ5ID0gKCkgPT4ge1xyXG4gICAgdmFyIHN1bW1hcnk6IGFueSA9IFtdXHJcbiAgICBzdW1tYXJ5LnB1c2goe1xyXG4gICAgICAgIGtleTogJ3N1YnRvdGFsJyxcclxuICAgICAgICB0aXRsZTogJ1N1YnRvdGFsJyxcclxuICAgICAgICB0aXRsZV9hcmFiaWM6ICfYp9mE2YXYrNmF2YjYuSDYp9mE2YHYsdi52YonLFxyXG4gICAgICAgIHByaWNlOiBnZXRTdWJ0b3RhbCgpXHJcbiAgICB9KVxyXG4gICAgaWYgKGdldFNoaXBwaW5nKCkpXHJcbiAgICAgICAgc3VtbWFyeS5wdXNoKHtcclxuICAgICAgICAgICAga2V5OiAnc2hpcHBpbmcnLFxyXG4gICAgICAgICAgICB0aXRsZTogJ1NoaXBwaW5nJyxcclxuICAgICAgICAgICAgdGl0bGVfYXJhYmljOiAn2KfZhNi02K3ZhicsXHJcbiAgICAgICAgICAgIHByaWNlOiBnZXRTaGlwcGluZygpXHJcbiAgICAgICAgfSlcclxuICAgIGlmIChnZXRXcmFwcGVyKCkpXHJcbiAgICAgICAgc3VtbWFyeS5wdXNoKHtcclxuICAgICAgICAgICAga2V5OiAnUGFja2FnaW5nJyxcclxuICAgICAgICAgICAgdGl0bGU6ICdQYWNrYWdpbmcnLFxyXG4gICAgICAgICAgICB0aXRsZV9hcmFiaWM6ICfYp9mE2KrYutmE2YrZgScsXHJcbiAgICAgICAgICAgIHByaWNlOiBnZXRXcmFwcGVyKClcclxuICAgICAgICB9KVxyXG4gICAgaWYgKGdldEluc3RhbGxhdGlvbigpKVxyXG4gICAgICAgIHN1bW1hcnkucHVzaCh7XHJcbiAgICAgICAgICAgIGtleTogJ0luc3RhbGxhdGlvbicsXHJcbiAgICAgICAgICAgIHRpdGxlOiAnSW5zdGFsbGF0aW9uJyxcclxuICAgICAgICAgICAgdGl0bGVfYXJhYmljOiAn2KfZhNiq2LHZg9mK2KgnLFxyXG4gICAgICAgICAgICBwcmljZTogZ2V0SW5zdGFsbGF0aW9uKClcclxuICAgICAgICB9KVxyXG4gICAgaWYgKGdldERpc2NvdW50ZXMoKS5hbW91bnQpIHtcclxuICAgICAgICBzdW1tYXJ5ID0gc3VtbWFyeS5jb25jYXQoZ2V0RGlzY291bnRlcygpLnN1bW1hcnkpXHJcbiAgICB9XHJcbiAgICBpZiAoZ2V0RXh0cmFGZWVzKCkuYW1vdW50KSB7XHJcbiAgICAgICAgc3VtbWFyeSA9IHN1bW1hcnkuY29uY2F0KGdldEV4dHJhRmVlcygpLnN1bW1hcnkpXHJcbiAgICB9XHJcbiAgICBpZiAoZ2V0Q291cG9uKCkuYW1vdW50KVxyXG4gICAgICAgIC8vIHN1bW1hcnkucHVzaCh7IGtleTogZ2V0Q291cG9uKCkudGl0bGUsIHByaWNlOiAnLSAnICsgTnVtYmVyKHBhcnNlRmxvYXQoZ2V0Q291cG9uKCkuYW1vdW50KS50b0ZpeGVkKDIpKSwgdGl0bGU6IGdldENvdXBvbigpLnRpdGxlLCB0aXRsZV9hcmFiaWM6IGdldENvdXBvbigpLnRpdGxlX2FyYWJpYyB9KVxyXG4gICAgICAgIHN1bW1hcnkucHVzaCh7IGtleTogJ2Rpc2NvdW50Q291cG9uJywgcHJpY2U6ICctICcgKyBOdW1iZXIocGFyc2VGbG9hdChnZXRDb3Vwb24oKS5hbW91bnQpLnRvRml4ZWQoMikpLCB0aXRsZTogZ2V0Q291cG9uKCkudGl0bGUsIHRpdGxlX2FyYWJpYzogZ2V0Q291cG9uKCkudGl0bGVfYXJhYmljIH0pXHJcbiAgICBcclxuICAgIGlmIChnZXRBZGRpdGlvbmFsRGlzY291bnQoKS5hbW91bnQpXHJcbiAgICAgICAgc3VtbWFyeS5wdXNoKHsga2V5OiAnYWRkaXRpb25hbERpc2NvdW50JywgcHJpY2U6ICctICcgKyBOdW1iZXIocGFyc2VGbG9hdChnZXRBZGRpdGlvbmFsRGlzY291bnQoKS5hbW91bnQpLnRvRml4ZWQoMikpLCB0aXRsZTogZ2V0QWRkaXRpb25hbERpc2NvdW50KCkudGl0bGUsIHRpdGxlX2FyYWJpYzogZ2V0QWRkaXRpb25hbERpc2NvdW50KCkudGl0bGVfYXJhYmljIH0pXHJcbiAgICAgICAgXHJcbiAgICBpZiAoZ2V0RXhwcmVzc0RlbGl2ZXJ5KCkuYW1vdW50KVxyXG4gICAgICAgIHN1bW1hcnkucHVzaCh7IGtleTogZ2V0RXhwcmVzc0RlbGl2ZXJ5KCkudGl0bGUsIHByaWNlOiBOdW1iZXIocGFyc2VGbG9hdChnZXRFeHByZXNzRGVsaXZlcnkoKS5hbW91bnQpLnRvRml4ZWQoMikpLCB0aXRsZTogZ2V0RXhwcmVzc0RlbGl2ZXJ5KCkudGl0bGUsIHRpdGxlX2FyYWJpYzogZ2V0RXhwcmVzc0RlbGl2ZXJ5KCkudGl0bGVfYXJhYmljIH0pXHJcblxyXG4gICAgaWYgKGdldERvb3JTdGVwKCkuYW1vdW50KVxyXG4gICAgICAgIHN1bW1hcnkucHVzaCh7IGtleTogZ2V0RG9vclN0ZXAoKS50aXRsZSwgcHJpY2U6IE51bWJlcihwYXJzZUZsb2F0KGdldERvb3JTdGVwKCkuYW1vdW50KS50b0ZpeGVkKDIpKSwgdGl0bGU6IGdldEV4cHJlc3NEZWxpdmVyeSgpLnRpdGxlLCB0aXRsZV9hcmFiaWM6IGdldEV4cHJlc3NEZWxpdmVyeSgpLnRpdGxlX2FyYWJpYyB9KVxyXG5cclxuICAgIC8vIGlmKGdldFdyYXBwZXIoKSlcclxuICAgIHN1bW1hcnkucHVzaCh7XHJcbiAgICAgICAga2V5OiAnc2F2ZScsXHJcbiAgICAgICAgdGl0bGU6IFwiUHJvZHVjdCdzIERpc2NvdW50XCIsXHJcbiAgICAgICAgdGl0bGVfYXJhYmljOiBcItiu2LXZhSDYp9mE2YXZhtiq2KzYp9iqXCIsXHJcbiAgICAgICAgcHJpY2U6ICctICcgKyBnZXRTYXZlQW1vdW50KClcclxuICAgIH0pXHJcbiAgICBzdW1tYXJ5LnB1c2goe1xyXG4gICAgICAgIGtleTogJ3RvdGFsJyxcclxuICAgICAgICB0aXRsZTogJ1RvdGFsJyxcclxuICAgICAgICB0aXRsZV9hcmFiaWM6ICfYpdis2YXYp9mE2Yog2KfZhNmF2KjZhNi6JyxcclxuICAgICAgICBwcmljZTogZ2V0VG90YWwoKVxyXG4gICAgfSlcclxuICAgIHJldHVybiBzdW1tYXJ5O1xyXG59XHJcbmNvbnN0IHNldFNoaXBwaW5nID0gYXN5bmMgKGNpdHk6IGFueSA9IGZhbHNlKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGEgPSBnZXRDYXJ0KCk7XHJcbiAgICB2YXIgcHJvaWQgPSBnZXRQcm9kdWN0aWRzKClcclxuICAgIGlmIChwcm9pZD8uaWQ/Lmxlbmd0aCA+PSAxKSB7XHJcbiAgICAgICAgdmFyIHNldERhdGE6IGFueSA9IHtcclxuICAgICAgICAgICAgdXNlcmlkOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJpZFwiKSxcclxuICAgICAgICAgICAgY2l0eTogY2l0eSA/IGNpdHkgOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImdsb2JhbGNpdHlcIiksXHJcbiAgICAgICAgICAgIHByb2R1Y3RpZHM6IHByb2lkLmlkLFxyXG4gICAgICAgIH1cclxuICAgICAgICBhd2FpdCBwb3N0KCdnZXRzaGlwcGluZycsIHNldERhdGEpLnRoZW4oKHJlc3BvbnNlSnNvbjogYW55KSA9PiB7XHJcblxyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2VKc29uLnN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgICAgIGNhcnRkYXRhID0gZ2V0Q2FydCgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGZlZXNkYXRhOiBhbnkgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHJlc3BvbnNlSnNvbj8uZGF0YT8uaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlSnNvbj8uZGF0YT8ubmFtZSxcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZV9hcmFiaWM6IHJlc3BvbnNlSnNvbj8uZGF0YT8ubmFtZV9hcmFiaWMsXHJcbiAgICAgICAgICAgICAgICAgICAgYW1vdW50OiByZXNwb25zZUpzb24/LmRhdGE/LmFtb3VudCxcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhcnRkYXRhLmZlZXMuc2hpcHBpbmcgPSBmZWVzZGF0YSBhcyBmZWVzXHJcbiAgICAgICAgICAgICAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY2FydGRhdGEgPSBnZXRDYXJ0KCk7XHJcbiAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5mZWVzLnNoaXBwaW5nID0ge30gYXMgZmVlc1xyXG4gICAgICAgICAgICAgICAgc2V0Q2FydChjYXJ0ZGF0YSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICByZXR1cm4gY2FydGRhdGE7XHJcbn1cclxuXHJcbmNvbnN0IGdldFBheW1lbnRNZXRob2RTdGF0dXMgPSBhc3luYyAoY2l0eTogYW55ID0gZmFsc2UpID0+IHtcclxuICAgIHZhciBwcm9pZCA9IGdldFByb2R1Y3RpZHModHJ1ZSlcclxuICAgIHZhciBzZXREYXRhOiBhbnkgPSB7XHJcbiAgICAgICAgY2l0eTogY2l0eSA/IGNpdHkgOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImdsb2JhbGNpdHlcIiksXHJcbiAgICAgICAgcHJvZHVjdGlkczogcHJvaWQuaWQsXHJcbiAgICAgICAgb3JkZXJhbW91bnQ6IGdldFRvdGFsKClcclxuICAgIH1cclxuICAgIHZhciBkYXRhOiBhbnk7XHJcbiAgICBhd2FpdCBwb3N0KCdjaGVja3BheW1lbnRtZXRob2QnLCBzZXREYXRhKS50aGVuKChyZXNwb25zZUpzb246IGFueSkgPT4ge1xyXG4gICAgICAgIGRhdGEgPSByZXNwb25zZUpzb24uZGF0YVxyXG4gICAgfSlcclxuICAgIHJldHVybiBkYXRhXHJcbn1cclxuXHJcbmNvbnN0IGdldEV4cHJlc3NEZWxpdmVyeSA9ICgpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGFtb3VudERhdGEgPSB7fSBhcyBmZWVzO1xyXG4gICAgaWYgKGNhcnRkYXRhPy5mZWVzPy5leHByZXNzKSB7XHJcbiAgICAgICAgYW1vdW50RGF0YSA9IGNhcnRkYXRhPy5mZWVzPy5leHByZXNzO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFtb3VudERhdGE7XHJcbn1cclxuXHJcbmNvbnN0IGdldEV4cHJlc3NEZWxpdmVyeUNhcnQgPSBhc3luYyAoY2l0eTogYW55ID0gZmFsc2UpID0+IHtcclxuICAgIC8vIHZhciBwcm9pZCA9IGdldFByb2R1Y3RpZHModHJ1ZSlcclxuICAgIHZhciBwcm9pZCA9IGdldFByb2R1Y3RpZHNEdXBsaWNhdGUodHJ1ZSlcclxuICAgIHZhciBzZXREYXRhOiBhbnkgPSB7XHJcbiAgICAgICAgcHJvZHVjdGlkczogcHJvaWQuaWQsXHJcbiAgICAgICAgcHJvZHVjdF9xdHk6IHByb2lkLnF1YW50aXR5LFxyXG4gICAgICAgIC8vIGNpdHk6ICdKZWRkYWgnLFxyXG4gICAgICAgIGNpdHk6IGNpdHkgPyBjaXR5IDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJnbG9iYWxjaXR5XCIpLFxyXG4gICAgfVxyXG4gICAgdmFyIEVYZGF0YTogbmV2ZXJbXSA9IFtdO1xyXG4gICAgYXdhaXQgcG9zdChgcHJvZHVjdGV4dHJhZGF0YS1yZWdpb25hbC1uZXctY2FydC8ke2xvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZ2xvYmFsY2l0eVwiKX1gLCBzZXREYXRhKS50aGVuKChyZXNwb25zZUpzb246IGFueSkgPT4ge1xyXG4gICAgICAgIEVYZGF0YSA9IHJlc3BvbnNlSnNvblxyXG4gICAgfSlcclxuICAgIHJldHVybiBFWGRhdGE7XHJcbn1cclxuXHJcbmNvbnN0IGdldEV4cHJlc3NEZWxpdmVyeURhdGEgPSBhc3luYyAoY2l0eTogYW55ID0gZmFsc2UpID0+IHtcclxuICAgIC8vIHZhciBwcm9pZCA9IGdldFByb2R1Y3RpZHModHJ1ZSlcclxuICAgIHZhciBwcm9pZCA9IGdldFByb2R1Y3RpZHNEdXBsaWNhdGUodHJ1ZSlcclxuICAgIHZhciBzZXREYXRhOiBhbnkgPSB7XHJcbiAgICAgICAgcHJvZHVjdGlkczogcHJvaWQuaWQsXHJcbiAgICAgICAgcHJvZHVjdHF0eTogcHJvaWQucXVhbnRpdHksXHJcbiAgICAgICAgY2l0eTogY2l0eSA/IGNpdHkgOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImdsb2JhbGNpdHlcIiksXHJcbiAgICB9XHJcbiAgICB2YXIgY2FydGRhdGE6IGFueSA9IGdldENhcnQoKTtcclxuICAgIHZhciBwcmVwcm9jb3VudCA9IGNhcnRkYXRhLnByb2R1Y3RzLmZpbHRlcigoZWxlbWVudDogYW55KSA9PiBlbGVtZW50LnByZV9vcmRlciA9PSAxKS5sZW5ndGhcclxuICAgIGlmIChwcmVwcm9jb3VudCA9PSAxKSB7XHJcbiAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG4gICAgdmFyIEVYZGF0YTogbmV2ZXJbXSA9IFtdO1xyXG4gICAgYXdhaXQgcG9zdCgnZ2V0ZXhwcmVzcy1yZWdpb25hbC1uZXcnLCBzZXREYXRhKS50aGVuKChyZXNwb25zZUpzb246IGFueSkgPT4ge1xyXG4gICAgICAgIEVYZGF0YSA9IHJlc3BvbnNlSnNvblxyXG4gICAgfSlcclxuXHJcbiAgICByZXR1cm4gRVhkYXRhO1xyXG59XHJcblxyXG5jb25zdCB1bnNldEV4cHJlc3NEZWxpdmVyeSA9ICgpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgY2FydGRhdGEuZmVlcy5leHByZXNzID0ge30gYXMgZmVlcztcclxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXJ0ZGF0YS5wcm9kdWN0cy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0uZXhwcmVzcyA9IGZhbHNlXHJcbiAgICB9XHJcbiAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgcmV0dXJuIGNhcnRkYXRhO1xyXG59XHJcblxyXG5jb25zdCBzZXRFeHByZXNzRGVsaXZlcnkgPSAoZGF0YTogYW55ID0gZmFsc2UpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGZlZXNkYXRhOiBhbnkgPSB7XHJcbiAgICAgICAgaWQ6IGRhdGE/LmRhdGE/LmlkLFxyXG4gICAgICAgIHRpdGxlOiBkYXRhPy5kYXRhPy50aXRsZSxcclxuICAgICAgICB0aXRsZV9hcmFiaWM6IGRhdGE/LmRhdGE/LnRpdGxlX2FyYWJpYyxcclxuICAgICAgICBudW1fb2ZfZGF5czogZGF0YT8uZGF0YT8ubnVtX29mX2RheXMsXHJcbiAgICAgICAgYW1vdW50OiBkYXRhPy5kYXRhPy5wcmljZSxcclxuICAgIH1cclxuICAgIGNhcnRkYXRhLmZlZXMuZXhwcmVzcyA9IGZlZXNkYXRhXHJcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY2FydGRhdGEucHJvZHVjdHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XTtcclxuICAgICAgICAvLyBmcmVlIGdpZnRcclxuICAgICAgICBmb3IgKGxldCBnID0gMDsgZyA8IGVsZW1lbnQ/LmdpZnQ/Lmxlbmd0aDsgZysrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRnaWZ0ID0gZWxlbWVudD8uZ2lmdFtnXTtcclxuICAgICAgICAgICAgaWYgKGRhdGE/LmRhdGE/LmFwcGxpZWRfaWQ/LmluY2x1ZGVzKGVsZW1lbnRnaWZ0LmlkKSkge1xyXG4gICAgICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdLmdpZnRbZ10uZXhwcmVzcyA9IHRydWVcclxuICAgICAgICAgICAgICAgIHZhciBxdHkgPSAwO1xyXG4gICAgICAgICAgICAgICAgdmFyIHRvdGFsUXR5ID0gMDtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YT8uZGF0YS5hcHBsaWVkX2lkPy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsbSA9IGRhdGE/LmRhdGEuYXBwbGllZF9pZFtpXTtcclxuICAgICAgICAgICAgICAgICAgICBpZihlbGVtZW50Z2lmdD8uaWQgPT0gZWxtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUXR5ID0gZGF0YT8ucXVhbnRpdGllc1tpXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRhPy5kYXRhPy5hcHBsaWVkX3F0eXNbaV0gPj0gZGF0YT8ucXVhbnRpdGllc1tpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXR5ID0gZGF0YT8ucXVhbnRpdGllc1tpXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXR5ID0gZGF0YT8uZGF0YT8uYXBwbGllZF9xdHlzW2ldXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0uZ2lmdFtnXS5leHByZXNzX3F0eSA9IHF0eVxyXG4gICAgICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdLmdpZnRbZ10uZXhwcmVzc190b3RhbF9xdHkgPSB0b3RhbFF0eVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBmYnRcclxuICAgICAgICBmb3IgKGxldCBmID0gMDsgZiA8IGVsZW1lbnQ/LmZidD8ubGVuZ3RoOyBmKyspIHtcclxuICAgICAgICAgICAgY29uc3QgZWxlbWVudGZidCA9IGVsZW1lbnQ/LmZidFtmXTtcclxuICAgICAgICAgICAgaWYgKGRhdGE/LmRhdGE/LmFwcGxpZWRfaWQ/LmluY2x1ZGVzKGVsZW1lbnRmYnQuaWQpKSB7XHJcbiAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0uZmJ0W2ZdLmV4cHJlc3MgPSB0cnVlXHJcbiAgICAgICAgICAgICAgICB2YXIgcXR5ID0gMDtcclxuICAgICAgICAgICAgICAgIHZhciB0b3RhbFF0eSA9IDA7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGE/LmRhdGEuYXBwbGllZF9pZD8ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbG0gPSBkYXRhPy5kYXRhLmFwcGxpZWRfaWRbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZWxlbWVudGZidD8uaWQgPT0gZWxtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUXR5ID0gZGF0YT8ucXVhbnRpdGllc1tpXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihkYXRhPy5kYXRhPy5hcHBsaWVkX3F0eXNbaV0gPj0gZGF0YT8ucXVhbnRpdGllc1tpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXR5ID0gZGF0YT8ucXVhbnRpdGllc1tpXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXR5ID0gZGF0YT8uZGF0YT8uYXBwbGllZF9xdHlzW2ldXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0uZmJ0W2ZdLmV4cHJlc3NfcXR5ID0gcXR5XHJcbiAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0uZmJ0W2ZdLmV4cHJlc3NfdG90YWxfcXR5ID0gdG90YWxRdHlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGRhdGE/LmRhdGE/LmFwcGxpZWRfaWQ/LmluY2x1ZGVzKGVsZW1lbnQuaWQpKSB7XHJcbiAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS5leHByZXNzID0gdHJ1ZVxyXG4gICAgICAgICAgICB2YXIgcXR5ID0gMDtcclxuICAgICAgICAgICAgdmFyIHRvdGFsUXR5ID0gMDtcclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhPy5kYXRhLmFwcGxpZWRfaWQ/Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBlbG0gPSBkYXRhPy5kYXRhLmFwcGxpZWRfaWRbaV07XHJcbiAgICAgICAgICAgICAgICBpZihlbGVtZW50Py5pZCA9PSBlbG0pIHtcclxuICAgICAgICAgICAgICAgICAgICB0b3RhbFF0eSA9IGRhdGE/LnF1YW50aXRpZXNbaV1cclxuICAgICAgICAgICAgICAgICAgICBpZihkYXRhPy5kYXRhPy5hcHBsaWVkX3F0eXNbaV0gPj0gZGF0YT8ucXVhbnRpdGllc1tpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBxdHkgPSBkYXRhPy5xdWFudGl0aWVzW2ldXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBxdHkgPSBkYXRhPy5kYXRhPy5hcHBsaWVkX3F0eXNbaV1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdLmV4cHJlc3NfcXR5ID0gcXR5XHJcbiAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS5leHByZXNzX3RvdGFsX3F0eSA9IHRvdGFsUXR5XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc2V0Q2FydChjYXJ0ZGF0YSlcclxuICAgIHJldHVybiB0cnVlO1xyXG59XHJcblxyXG4vLyBjb25zdCBzZXRFeHByZXNzRGVsaXZlcnkgPSAoZGF0YTogYW55ID0gZmFsc2UpID0+IHtcclxuLy8gICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4vLyAgICAgdmFyIGZlZXNkYXRhOiBhbnkgPSB7XHJcbi8vICAgICAgICAgaWQ6IGRhdGE/LmRhdGE/LmlkLFxyXG4vLyAgICAgICAgIHRpdGxlOiBkYXRhPy5kYXRhPy50aXRsZSxcclxuLy8gICAgICAgICB0aXRsZV9hcmFiaWM6IGRhdGE/LmRhdGE/LnRpdGxlX2FyYWJpYyxcclxuLy8gICAgICAgICBudW1fb2ZfZGF5czogZGF0YT8uZGF0YT8ubnVtX29mX2RheXMsXHJcbi8vICAgICAgICAgYW1vdW50OiBkYXRhPy5kYXRhPy5wcmljZSxcclxuLy8gICAgIH1cclxuLy8gICAgIGNhcnRkYXRhLmZlZXMuZXhwcmVzcyA9IGZlZXNkYXRhXHJcbi8vICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY2FydGRhdGEucHJvZHVjdHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbi8vICAgICAgICAgY29uc3QgZWxlbWVudCA9IGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XTtcclxuLy8gICAgICAgICBpZiAoZGF0YT8uZGF0YT8uYXBwbGllZF9pZD8uaW5jbHVkZXMoZWxlbWVudC5pZCkpIHtcclxuLy8gICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdLmV4cHJlc3MgPSB0cnVlXHJcbi8vICAgICAgICAgICAgIHZhciBxdHkgPSAwO1xyXG4vLyAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGE/LmRhdGEuYXBwbGllZF9pZD8ubGVuZ3RoOyBpKyspIHtcclxuLy8gICAgICAgICAgICAgICAgIGNvbnN0IGVsbSA9IGRhdGE/LmRhdGEuYXBwbGllZF9pZFtpXTtcclxuLy8gICAgICAgICAgICAgICAgIGlmKGVsZW1lbnQ/LmlkID09IGVsbSkge1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIGlmKGRhdGE/LmRhdGE/LmFwcGxpZWRfcXR5c1tpXSA+PSBkYXRhPy5xdWFudGl0aWVzW2ldKSB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIHF0eSA9IGRhdGE/LnF1YW50aXRpZXNbaV1cclxuLy8gICAgICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIHF0eSA9IGRhdGE/LmRhdGE/LmFwcGxpZWRfcXR5c1tpXVxyXG4vLyAgICAgICAgICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0uZXhwcmVzc19xdHkgPSBxdHlcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vICAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4vLyAgICAgcmV0dXJuIHRydWU7XHJcbi8vIH1cclxuXHJcblxyXG5jb25zdCBnZXREb29yU3RlcCA9ICgpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGFtb3VudERhdGEgPSB7fSBhcyBmZWVzO1xyXG4gICAgaWYgKGNhcnRkYXRhPy5mZWVzPy5kb29yc3RlcCkge1xyXG4gICAgICAgIGFtb3VudERhdGEgPSBjYXJ0ZGF0YT8uZmVlcz8uZG9vcnN0ZXA7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYW1vdW50RGF0YTtcclxufVxyXG5cclxuY29uc3QgZ2V0RG9vclN0ZXBEYXRhID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgdmFyIHByb2lkID0gZ2V0UHJvZHVjdGlkcyh0cnVlKVxyXG4gICAgdmFyIHNldERhdGE6IGFueSA9IHtcclxuICAgICAgICBwcm9kdWN0aWRzOiBwcm9pZC5pZCxcclxuICAgIH1cclxuICAgIHZhciBFWGRhdGE6IG5ldmVyW10gPSBbXTtcclxuICAgIGF3YWl0IHBvc3QoJ2dldGRvb3JzdGVwJywgc2V0RGF0YSkudGhlbigocmVzcG9uc2VKc29uOiBhbnkpID0+IHtcclxuICAgICAgICBFWGRhdGEgPSByZXNwb25zZUpzb24/LmRhdGFcclxuICAgIH0pXHJcblxyXG4gICAgcmV0dXJuIEVYZGF0YTtcclxufVxyXG5cclxuY29uc3QgdW5zZXREb29yU3RlcCA9ICgpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgY2FydGRhdGEuZmVlcy5kb29yc3RlcCA9IHt9IGFzIGZlZXM7XHJcbiAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgcmV0dXJuIGNhcnRkYXRhO1xyXG59XHJcblxyXG5jb25zdCBzZXREb29yU3RlcCA9IChkYXRhOiBhbnkgPSBmYWxzZSkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhOiBhbnkgPSBnZXRDYXJ0KCk7XHJcbiAgICB2YXIgZmVlc2RhdGE6IGFueSA9IHtcclxuICAgICAgICBpZDogZGF0YT8uaWQsXHJcbiAgICAgICAgdGl0bGU6IGRhdGE/LnRpdGxlLFxyXG4gICAgICAgIHRpdGxlX2FyYWJpYzogZGF0YT8udGl0bGVfYXJhYmljLFxyXG4gICAgICAgIG51bV9vZl9kYXlzOiBkYXRhPy5udW1fb2ZfZGF5cyxcclxuICAgICAgICBhbW91bnQ6IGRhdGE/LnByaWNlLFxyXG4gICAgfVxyXG4gICAgY2FydGRhdGEuZmVlcy5kb29yc3RlcCA9IGZlZXNkYXRhXHJcbiAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn1cclxuXHJcbmNvbnN0IGdldENvdXBvbiA9ICgpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIGFtb3VudERhdGEgPSB7fSBhcyBkaXNjb3VudDtcclxuICAgIGlmIChjYXJ0ZGF0YT8uZGlzY291bnRzPy5jb3Vwb24pIHtcclxuICAgICAgICBhbW91bnREYXRhID0gY2FydGRhdGE/LmRpc2NvdW50cz8uY291cG9uO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFtb3VudERhdGE7XHJcbn1cclxuXHJcbmNvbnN0IHVuc2V0Y291cG9uID0gKCkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhOiBhbnkgPSBnZXRDYXJ0KCk7XHJcbiAgICBjYXJ0ZGF0YS5kaXNjb3VudHMuY291cG9uID0ge30gYXMgZGlzY291bnQ7XHJcbiAgICBjYXJ0ZGF0YS5leHRyYWRhdGEgPSBbXTtcclxuICAgIHNldENhcnQoY2FydGRhdGEpXHJcbiAgICByZXR1cm4gY2FydGRhdGE7XHJcbn1cclxuXHJcbmNvbnN0IHNldENvdXBvbiA9IGFzeW5jIChjaXR5OiBhbnkgPSBmYWxzZSwgY29kZTogYW55ID0gZmFsc2UpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIHByb2lkID0gZ2V0UHJvZHVjdGlkcyh0cnVlKVxyXG4gICAgdmFyIHNldERhdGE6IGFueSA9IHtcclxuICAgICAgICB1c2VyaWQ6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidXNlcmlkXCIpLFxyXG4gICAgICAgIGNpdHk6IGNpdHkgPyBjaXR5IDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJnbG9iYWxjaXR5XCIpLFxyXG4gICAgICAgIHByb2R1Y3RpZHM6IHByb2lkLmlkLFxyXG4gICAgICAgIHByb2R1Y3RwcmljZTogcHJvaWQucHJpY2UsXHJcbiAgICAgICAgcHJvZHVjdHF0eTogcHJvaWQucXVhbnRpdHksXHJcbiAgICAgICAgY291cG9uX2NvZGU6IGNvZGUgPyBjb2RlIDogZmFsc2UsXHJcbiAgICAgICAgcGF5bWVudG1ldGhvZDogY2FydGRhdGE/LnBheW1lbnRNZXRob2QgPyBjYXJ0ZGF0YT8ucGF5bWVudE1ldGhvZCA6IGZhbHNlLFxyXG4gICAgICAgIC8vIHN1YnRvdGFsOiBnZXRTdWJ0b3RhbCgpLFxyXG4gICAgICAgIC8vIHN1YnRvdGFsOiBnZXRTdWJ0b3RhbFNhbGUoKSxcclxuICAgICAgICBzdWJ0b3RhbDogZ2V0VG90YWwoKSxcclxuICAgICAgICBjYXJ0ZGF0YTogY2FydGRhdGEsXHJcbiAgICAgICAgZGV2aWNlOiBcImFwcFwiLFxyXG4gICAgfVxyXG4gICAgdmFyIHN1Y2Nlc3MgPSBmYWxzZVxyXG4gICAgYXdhaXQgcG9zdCgnY291cG9uRGF0YScsIHNldERhdGEpLnRoZW4oKHJlc3BvbnNlSnNvbjogYW55KSA9PiB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlSnNvbi5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgIGNhcnRkYXRhID0gZ2V0Q2FydCgpO1xyXG4gICAgICAgICAgICB2YXIgZmVlc2RhdGE6IGFueSA9IHtcclxuICAgICAgICAgICAgICAgIGlkOiByZXNwb25zZUpzb24/LmRhdGE/LmlkLFxyXG4gICAgICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlSnNvbj8uZGF0YT8udGl0bGUsXHJcbiAgICAgICAgICAgICAgICB0aXRsZV9hcmFiaWM6IHJlc3BvbnNlSnNvbj8uZGF0YT8udGl0bGVfYXJhYmljLFxyXG4gICAgICAgICAgICAgICAgYW1vdW50OiByZXNwb25zZUpzb24/LmRhdGE/LmFtb3VudCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXJ0ZGF0YS5kaXNjb3VudHMuY291cG9uID0gZmVlc2RhdGEgYXMgZGlzY291bnRcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlSnNvbj8uZGF0YT8uZXh0cmFkYXRhKVxyXG4gICAgICAgICAgICAgICAgY2FydGRhdGEuZXh0cmFkYXRhID0gcmVzcG9uc2VKc29uPy5kYXRhPy5leHRyYWRhdGFcclxuICAgICAgICAgICAgc2V0Q2FydChjYXJ0ZGF0YSlcclxuICAgICAgICAgICAgc3VjY2VzcyA9IHRydWVcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgIHJldHVybiBzdWNjZXNzO1xyXG59XHJcblxyXG5jb25zdCBzZXRBZGRpdGlvbmFsRGlzY291bnQgPSAoKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGEgPSBnZXRDYXJ0KCk7XHJcbiAgICB2YXIgZGlzY291bnQgPSAwO1xyXG4gICAgdmFyIHByb2R1Y3RzID0gY2FydGRhdGEucHJvZHVjdHM7XHJcbiAgXHJcbiAgICAvLyBFeGNsdWRlIEJPR08gcHJvZHVjdHNcclxuICAgIGNvbnN0IHZhbGlkUHJvZHVjdHMgPSBwcm9kdWN0cy5maWx0ZXIoKHByb2R1Y3QpID0+IHByb2R1Y3QuYm9nbyAhPT0gMSk7XHJcbiAgXHJcbiAgICAvLyBDYWxjdWxhdGUgdG90YWwgcXVhbnRpdHlcclxuICAgIGNvbnN0IHRvdGFsUXVhbnRpdHkgPSB2YWxpZFByb2R1Y3RzLnJlZHVjZSgoc3VtLCBwcm9kdWN0KSA9PiBzdW0gKyBwcm9kdWN0LnF1YW50aXR5LCAwKTtcclxuICBcclxuICAgIGlmICh0b3RhbFF1YW50aXR5ID4gMSkge1xyXG4gICAgICAvLyBDaGVjayBicmFuZCBjb25kaXRpb25cclxuICAgICAgY29uc3QgaGFzQnJhbmRDb25kaXRpb24gPSB2YWxpZFByb2R1Y3RzLnNvbWUoXHJcbiAgICAgICAgKHByb2R1Y3QpID0+IHByb2R1Y3QuYnJhbmQgJiYgWzIyLCAyMywgNDJdLmluY2x1ZGVzKChwcm9kdWN0LmJyYW5kIGFzIGFueSkuaWQpXHJcbiAgICAgICk7XHJcbiAgXHJcbiAgICAgIGlmIChoYXNCcmFuZENvbmRpdGlvbikge1xyXG4gICAgICAgIGlmICh2YWxpZFByb2R1Y3RzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgLy8gSGFuZGxlIHNpbmdsZSBwcm9kdWN0XHJcbiAgICAgICAgICBjb25zdCBwcm9kdWN0ID0gdmFsaWRQcm9kdWN0c1swXTtcclxuICAgICAgICAgIGNvbnN0IGFkanVzdGVkUXVhbnRpdHkgPSBwcm9kdWN0LnF1YW50aXR5ID4gMSA/IHByb2R1Y3QucXVhbnRpdHkgLSAxIDogcHJvZHVjdC5xdWFudGl0eTtcclxuICBcclxuICAgICAgICAgIGNvbnN0IHRvdGFsUHJpY2UgPSBhZGp1c3RlZFF1YW50aXR5ICogcHJvZHVjdC5wcmljZTtcclxuICBcclxuICAgICAgICAgIC8vIENhbGN1bGF0ZSBkaXNjb3VudFxyXG4gICAgICAgICAgZGlzY291bnQgPSBNYXRoLmZsb29yKHRvdGFsUHJpY2UgLyAxMDAwKSAqIDEwMDtcclxuICBcclxuICAgICAgICAgIC8vIENhcCBkaXNjb3VudCB0byBwcm9kdWN0IHByaWNlXHJcbiAgICAgICAgICBpZiAoZGlzY291bnQgPiBwcm9kdWN0LnByaWNlKSB7XHJcbiAgICAgICAgICAgIGRpc2NvdW50ID0gcHJvZHVjdC5wcmljZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKHZhbGlkUHJvZHVjdHMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgLy8gSGFuZGxlIG11bHRpcGxlIHByb2R1Y3RzXHJcbiAgICAgICAgICBjb25zdCBwcm9kdWN0V2l0aExvd2VzdEFtb3VudCA9IHZhbGlkUHJvZHVjdHMucmVkdWNlKChsb3dlc3QsIGN1cnJlbnQpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgbG93ZXN0QW1vdW50ID0gbG93ZXN0LnF1YW50aXR5ICogbG93ZXN0LnByaWNlO1xyXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50QW1vdW50ID0gY3VycmVudC5xdWFudGl0eSAqIGN1cnJlbnQucHJpY2U7XHJcbiAgICAgICAgICAgIHJldHVybiBjdXJyZW50QW1vdW50IDwgbG93ZXN0QW1vdW50ID8gY3VycmVudCA6IGxvd2VzdDtcclxuICAgICAgICAgIH0pO1xyXG4gIFxyXG4gICAgICAgICAgLy8gUmVtb3ZlIHRoZSBsb3dlc3QtYW1vdW50IHByb2R1Y3RcclxuICAgICAgICAgIGNvbnN0IHJlbWFpbmluZ1Byb2R1Y3RzID0gdmFsaWRQcm9kdWN0cy5maWx0ZXIoXHJcbiAgICAgICAgICAgIChwcm9kdWN0KSA9PiBwcm9kdWN0ICE9PSBwcm9kdWN0V2l0aExvd2VzdEFtb3VudFxyXG4gICAgICAgICAgKTtcclxuICBcclxuICAgICAgICAgIC8vIENhbGN1bGF0ZSByZW1haW5pbmcgdG90YWwgYW1vdW50XHJcbiAgICAgICAgICBjb25zdCByZW1haW5pbmdUb3RhbEFtb3VudCA9IHJlbWFpbmluZ1Byb2R1Y3RzLnJlZHVjZShcclxuICAgICAgICAgICAgKHN1bSwgcHJvZHVjdCkgPT4gc3VtICsgcHJvZHVjdC5xdWFudGl0eSAqIHByb2R1Y3QucHJpY2UsXHJcbiAgICAgICAgICAgIDBcclxuICAgICAgICAgICk7XHJcbiAgXHJcbiAgICAgICAgICAvLyBDYWxjdWxhdGUgZGlzY291bnRcclxuICAgICAgICAgIGRpc2NvdW50ID0gTWF0aC5mbG9vcihyZW1haW5pbmdUb3RhbEFtb3VudCAvIDEwMDApICogMTAwO1xyXG4gIFxyXG4gICAgICAgICAgLy8gQ2FwIGRpc2NvdW50IHRvIHRoZSBhbW91bnQgb2YgdGhlIHJlbW92ZWQgcHJvZHVjdFxyXG4gICAgICAgICAgY29uc3QgcmVtb3ZlZFByb2R1Y3RBbW91bnQgPSBwcm9kdWN0V2l0aExvd2VzdEFtb3VudC5xdWFudGl0eSAqIHByb2R1Y3RXaXRoTG93ZXN0QW1vdW50LnByaWNlO1xyXG4gICAgICAgICAgaWYgKGRpc2NvdW50ID4gcmVtb3ZlZFByb2R1Y3RBbW91bnQpIHtcclxuICAgICAgICAgICAgZGlzY291bnQgPSByZW1vdmVkUHJvZHVjdEFtb3VudDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICBcclxuICAgIC8vIEFwcGx5IGRpc2NvdW50IHRvIGNhcnRcclxuICAgIGNvbnN0IGFkZGRpc2NvdW50OiBhbnkgPSBkaXNjb3VudCA+IDBcclxuICAgICAgPyB7IGlkOiAwLCB0aXRsZTogJ0dpZnQgVm91Y2hlcicsIHRpdGxlX2FyYWJpYzogJ9mC2LPZitmF2Kkg2YfYr9mK2KknLCBhbW91bnQ6IGRpc2NvdW50IH1cclxuICAgICAgOiB7fTtcclxuICBcclxuICAgIGNhcnRkYXRhLmRpc2NvdW50cy5hZGRpdGlvbmFsRGlzY291bnQgPSBhZGRkaXNjb3VudDtcclxuICAgIHNldENhcnQoY2FydGRhdGEpO1xyXG4gIFxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn07XHJcblxyXG5cclxuY29uc3Qgc2V0RGlzY291bnRSdWxlID0gYXN5bmMgKGNpdHk6IGFueSA9IGZhbHNlKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGE6IGFueSA9IGdldENhcnQoKTtcclxuICAgIHZhciBwcm9pZCA9IGdldFByb2R1Y3RpZHModHJ1ZSlcclxuICAgIGlmIChjYXJ0ZGF0YT8ucHJvZHVjdHM/Lmxlbmd0aCA+PSAxKSB7XHJcbiAgICAgICAgdmFyIHNldERhdGE6IGFueSA9IHtcclxuICAgICAgICAgICAgdXNlcmlkOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJpZFwiKSxcclxuICAgICAgICAgICAgY2l0eTogY2l0eSA/IGNpdHkgOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImdsb2JhbGNpdHlcIiksXHJcbiAgICAgICAgICAgIHByb2R1Y3RpZHM6IHByb2lkLmlkLFxyXG4gICAgICAgICAgICBwcm9kdWN0cHJpY2U6IHByb2lkLnByaWNlLFxyXG4gICAgICAgICAgICBwcm9kdWN0cXR5OiBwcm9pZC5xdWFudGl0eSxcclxuICAgICAgICAgICAgY291cG9uOiBjYXJ0ZGF0YT8uZGlzY291bnRzPy5jb3Vwb24gPyBjYXJ0ZGF0YT8uZGlzY291bnRzPy5jb3Vwb24/LmlkIDogZmFsc2UsXHJcbiAgICAgICAgICAgIHBheW1lbnRtZXRob2Q6IGNhcnRkYXRhPy5wYXltZW50TWV0aG9kID8gY2FydGRhdGE/LnBheW1lbnRNZXRob2QgOiBmYWxzZSxcclxuICAgICAgICAgICAgLy9zdWJ0b3RhbDogZ2V0U3VidG90YWwoKSxcclxuICAgICAgICAgICAgc3VidG90YWw6IGdldFRvdGFsKCksXHJcbiAgICAgICAgICAgIGV4dHJhZGF0YTogY2FydGRhdGE/LmV4dHJhZGF0YSA/IGNhcnRkYXRhPy5leHRyYWRhdGEgOiBudWxsLFxyXG4gICAgICAgICAgICBkaXNjb3VudFR5cGU6IDAsXHJcbiAgICAgICAgICAgIGRldmljZTogXCJhcHBcIixcclxuICAgICAgICB9XHJcbiAgICAgICAgYXdhaXQgcG9zdCgnZGlzY291bnRSdWxlJywgc2V0RGF0YSkudGhlbihhc3luYyAocmVzcG9uc2VKc29uOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlSnNvbi5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICBjYXJ0ZGF0YSA9IGdldENhcnQoKTtcclxuICAgICAgICAgICAgICAgIHZhciBkaXNjb3VudHM6IGFueSA9IFtdXHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2VKc29uLmRhdGEuY2FydC5sZW5ndGgpXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzY291bnRzID0gZGlzY291bnRzLmNvbmNhdChyZXNwb25zZUpzb24uZGF0YS5jYXJ0KVxyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlSnNvbi5kYXRhLmJ1bGsubGVuZ3RoKVxyXG4gICAgICAgICAgICAgICAgICAgIGRpc2NvdW50cyA9IGRpc2NvdW50cy5jb25jYXQocmVzcG9uc2VKc29uLmRhdGEuYnVsaylcclxuICAgICAgICAgICAgICAgIGNhcnRkYXRhLmRpc2NvdW50cy5kaXNjdW91bnRSdWxlcyA9IGRpc2NvdW50c1xyXG4gICAgICAgICAgICAgICAgLy8gc2V0Q2FydChjYXJ0ZGF0YSlcclxuICAgICAgICAgICAgICAgIC8vIGNhcnRkYXRhLnByb2R1Y3RzID0gY2FydGRhdGEucHJvZHVjdHMuZmlsdGVyKChlOiBhbnkpID0+ICFlPy5ib2dvKVxyXG5cclxuICAgICAgICAgICAgICAgIC8vY2FydGRhdGEgPSByZW1vdmVCb2dvKGNhcnRkYXRhKVxyXG4gICAgICAgICAgICAgICAgLy8gZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNhcnRkYXRhLnByb2R1Y3RzLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIGNvbnN0IGVsZW1lbnQgPSBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF07XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgaWYoZWxlbWVudD8uYm9nbyl7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIC8vIGNvbnNvbGUubG9nKGluZGV4KVxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAvLyBjb25zb2xlLmxvZyhjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0pXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIC8vIGF3YWl0IGNhcnRkYXRhLnByb2R1Y3RzLnNwbGljZShpbmRleCwxKVxyXG4gICAgICAgICAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgICAgICAgICAvLyBjYXJ0ZGF0YS5wcm9kdWN0cyA9IGNhcnRkYXRhLnByb2R1Y3RzLmZpbHRlcigoZTogYW55KSA9PiAhZT8uYm9nbylcclxuICAgICAgICAgICAgICAgIC8vIGlmIChyZXNwb25zZUpzb24uZGF0YS5ib2dvLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIGNhcnRkYXRhLnByb2R1Y3RzID0gY2FydGRhdGEucHJvZHVjdHMuY29uY2F0KHJlc3BvbnNlSnNvbi5kYXRhLmJvZ28pXHJcbiAgICAgICAgICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhjYXJ0ZGF0YS5wcm9kdWN0cylcclxuICAgICAgICAgICAgICAgIC8vIGlmKHJlc3BvbnNlSnNvbi5kYXRhLmJvZ28ubGVuZ3RoKVxyXG4gICAgICAgICAgICAgICAgLy8gICAgIGNhcnRkYXRhID0gYWRkQm9nbyhyZXNwb25zZUpzb24uZGF0YS5ib2dvLCBjYXJ0ZGF0YSlcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coY2FydGRhdGEucHJvZHVjdHMpXHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlSnNvbi5kYXRhLmJvZ28ubGVuZ3RoKVxyXG4gICAgICAgICAgICAgICAgLy8gc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIGlmKHJlc3BvbnNlSnNvbi5kYXRhLmJvZ28ubGVuZ3RoKVxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBhZGRCb2dvKHJlc3BvbnNlSnNvbi5kYXRhLmJvZ28pXHJcbiAgICAgICAgICAgICAgICAvLyB9LCAxMDAwKVxyXG4gICAgICAgICAgICAgICAgc2V0Q2FydChjYXJ0ZGF0YSlcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICByZXR1cm4gY2FydGRhdGE7XHJcbn1cclxuXHJcbmNvbnN0IHNldERpc2NvdW50UnVsZUJvZ28gPSBhc3luYyAoY2l0eTogYW55ID0gZmFsc2UpID0+IHtcclxuICAgIHZhciBjYXJ0ZGF0YTogYW55ID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIHByb2lkID0gZ2V0UHJvZHVjdGlkcyh0cnVlKVxyXG4gICAgaWYgKGNhcnRkYXRhPy5wcm9kdWN0cz8ubGVuZ3RoID49IDEpIHtcclxuICAgICAgICB2YXIgc2V0RGF0YTogYW55ID0ge1xyXG4gICAgICAgICAgICB1c2VyaWQ6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidXNlcmlkXCIpLFxyXG4gICAgICAgICAgICBjaXR5OiBjaXR5ID8gY2l0eSA6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiZ2xvYmFsY2l0eVwiKSxcclxuICAgICAgICAgICAgcHJvZHVjdGlkczogcHJvaWQuaWQsXHJcbiAgICAgICAgICAgIHByb2R1Y3RwcmljZTogcHJvaWQucHJpY2UsXHJcbiAgICAgICAgICAgIHByb2R1Y3RxdHk6IHByb2lkLnF1YW50aXR5LFxyXG4gICAgICAgICAgICBjb3Vwb246IGNhcnRkYXRhPy5kaXNjb3VudHM/LmNvdXBvbiA/IGNhcnRkYXRhPy5kaXNjb3VudHM/LmNvdXBvbj8uaWQgOiBmYWxzZSxcclxuICAgICAgICAgICAgcGF5bWVudG1ldGhvZDogY2FydGRhdGE/LnBheW1lbnRNZXRob2QgPyBjYXJ0ZGF0YT8ucGF5bWVudE1ldGhvZCA6IGZhbHNlLFxyXG4gICAgICAgICAgICAvL3N1YnRvdGFsOiBnZXRTdWJ0b3RhbCgpLFxyXG4gICAgICAgICAgICAvLyBzdWJ0b3RhbDogZ2V0U3VidG90YWxTYWxlKCksXHJcbiAgICAgICAgICAgIHN1YnRvdGFsOiBnZXRUb3RhbCgpLFxyXG4gICAgICAgICAgICBleHRyYWRhdGE6IGNhcnRkYXRhPy5leHRyYWRhdGEgPyBjYXJ0ZGF0YT8uZXh0cmFkYXRhIDogbnVsbCxcclxuICAgICAgICAgICAgZGlzY291bnRUeXBlOiAxLFxyXG4gICAgICAgICAgICBkZXZpY2U6IFwiYXBwXCJcclxuICAgICAgICB9XHJcbiAgICAgICAgYXdhaXQgcG9zdCgnZGlzY291bnRSdWxlJywgc2V0RGF0YSkudGhlbihhc3luYyAocmVzcG9uc2VKc29uOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlSnNvbi5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICBjYXJ0ZGF0YSA9IGdldENhcnQoKTtcclxuICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzID0gY2FydGRhdGEucHJvZHVjdHMuZmlsdGVyKChlOiBhbnkpID0+ICFlPy5ib2dvKVxyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlSnNvbi5kYXRhLmJvZ28ubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHMgPSBjYXJ0ZGF0YS5wcm9kdWN0cy5jb25jYXQocmVzcG9uc2VKc29uLmRhdGEuYm9nbylcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHNldENhcnQoY2FydGRhdGEpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjYXJ0ZGF0YTtcclxufVxyXG5cclxuY29uc3QgcmVjaGVja2NhcnRkYXRhID0gYXN5bmMgKGxhbmc6YW55ID0gJ2FyJyxjaXR5OiBhbnkgPSBmYWxzZSkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIHByb2lkID0gZ2V0UHJvZHVjdGlkcygpXHJcbiAgICB2YXIgcmVzcG9uc2U6YW55ID0ge1xyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgbWVzc2FnZXM6W10sXHJcbiAgICB9XHJcbiAgICB2YXIgcmVtb3ZlaWRzOmFueSA9IFtdXHJcbiAgICBpZiAocHJvaWQuaWQubGVuZ3RoKSB7XHJcbiAgICAgICAgdmFyIHNldERhdGE6IGFueSA9IHtcclxuICAgICAgICAgICAgcHJvZHVjdGlkczogcHJvaWQuaWQsXHJcbiAgICAgICAgICAgIGNpdHk6IGNpdHkgPyBjaXR5IDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJnbG9iYWxjaXR5XCIpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGF3YWl0IHBvc3QoJ3JlY2hlY2tkYXRhLXJlZ2lvbmFsLW5ldycsIHNldERhdGEpLnRoZW4oKHJlc3BvbnNlSnNvbjogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXJ0ZGF0YS5wcm9kdWN0cy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQ6YW55ID0gY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNoZWNrZGF0YSA9IHJlc3BvbnNlSnNvbj8uZGF0YT8uZmlsdGVyKChlOmFueSkgPT4gZS5pZCA9PSBlbGVtZW50LmlkKVxyXG4gICAgICAgICAgICAgICAgaWYoY2hlY2tkYXRhPy5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS50b3RhbF9xdWFudGl0eSA9IGNoZWNrZGF0YVswXS5xdWFudGl0eVxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGNoZWNrZGF0YVswXS5xdWFudGl0eSA8IGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS5xdWFudGl0eSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLnN1Y2Nlc3MgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWU6YW55ID0gZWxlbWVudC5uYW1lKycgcXVhbnRpdHkgaGFzIGJlZW4gY2hhbmdlZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UubWVzc2FnZXMucHVzaChtZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdLnF1YW50aXR5ID0gY2hlY2tkYXRhWzBdLnF1YW50aXR5XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS5xdWFudGl0eSA8PSAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlaWRzLnB1c2goaW5kZXgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLnN1Y2Nlc3MgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3cHJpY2UgPSBjaGVja2RhdGFbMF0uc2FsZV9wcmljZSA/IGNoZWNrZGF0YVswXS5zYWxlX3ByaWNlIDogY2hlY2tkYXRhWzBdLnByaWNlXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYoY2hlY2tkYXRhWzBdLnByb21vdGlvbmFsX3ByaWNlKXtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgbmV3cHJpY2UgLT0gY2hlY2tkYXRhWzBdLnByb21vdGlvbmFsX3ByaWNlXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGVja2RhdGFbMF0/LmZsYXNoX3NhbGVfZXhwaXJ5ICYmIGNoZWNrZGF0YVswXT8uZmxhc2hfc2FsZV9wcmljZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGltZXIgPSBjYWxjdWxhdGVUaW1lTGVmdChjaGVja2RhdGFbMF0/LmZsYXNoX3NhbGVfZXhwaXJ5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aW1lcj8uZXhwaXJlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3cHJpY2UgPSBjaGVja2RhdGFbMF0/LmZsYXNoX3NhbGVfcHJpY2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZihjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0ucHJpY2UgIT0gbmV3cHJpY2Upe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0ucHJpY2UgPSBuZXdwcmljZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5zdWNjZXNzID0gZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1lOmFueSA9IGVsZW1lbnQubmFtZSsnIHByaWNlIGhhcyBiZWVuIGNoYW5nZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLm1lc3NhZ2VzLnB1c2gobWUpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS5yZWd1bGFyX3ByaWNlID0gY2hlY2tkYXRhWzBdLnByaWNlXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmKGVsZW1lbnQ/LmdpZnQ/Lmxlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKCFyZXNwb25zZUpzb24/LmV4dHJhRGF0YVtlbGVtZW50LmlkXT8uZnJlZWdpZnREYXRhKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS5naWZ0ID0gW11cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLnN1Y2Nlc3MgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1lOmFueSA9IGVsZW1lbnQubmFtZSsnIGdpZnRzIGhhcyBiZWVuIGNoYW5nZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5tZXNzYWdlcy5wdXNoKG1lKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYocmVzcG9uc2VKc29uPy5leHRyYURhdGFbZWxlbWVudC5pZF0/LmZyZWVnaWZ0RGF0YT8uYWxsb3dlZF9naWZ0cyA8IGVsZW1lbnQ/LmdpZnQ/Lmxlbmd0aCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXJ0ZGF0YS5wcm9kdWN0c1tpbmRleF0uZ2lmdCA9IFtdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5zdWNjZXNzID0gZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZTphbnkgPSBlbGVtZW50Lm5hbWUrJyBnaWZ0cyBoYXMgYmVlbiBjaGFuZ2VkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UubWVzc2FnZXMucHVzaChtZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQ/LmZidD8ubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2VKc29uPy5leHRyYURhdGFbZWxlbWVudC5pZF0/LmZidGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcnRkYXRhLnByb2R1Y3RzW2luZGV4XS5mYnQgPSBbXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Uuc3VjY2VzcyA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWU6IGFueSA9IGVsZW1lbnQubmFtZSArICcgZmJ0IGhhcyBiZWVuIGNoYW5nZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5tZXNzYWdlcy5wdXNoKG1lKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRmYnQgPSByZXNwb25zZUpzb24/LmV4dHJhRGF0YVtlbGVtZW50LmlkXT8uZmJ0ZGF0YT8uZmJ0bGlzdFswXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRmYnQgPSBlbGVtZW50Py5mYnRbMF1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmYnRwcmljZTogbnVtYmVyID0gZWxlbWVudGZidC5wcm9kdWN0ZGV0YWlsLnNhbGVfcHJpY2UgPyBlbGVtZW50ZmJ0LnByb2R1Y3RkZXRhaWwuc2FsZV9wcmljZSA6IGVsZW1lbnRmYnQucHJvZHVjdGRldGFpbC5wcmljZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlSnNvbj8uZXh0cmFEYXRhW2VsZW1lbnQuaWRdPy5mYnRkYXRhPy5kaXNjb3VudF90eXBlID09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYnRwcmljZSAtPSAoZWxlbWVudGZidD8uZGlzY291bnQgKiBmYnRwcmljZSkgLyAxMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZidHByaWNlID0gZWxlbWVudGZidD8uZGlzY291bnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gYW1vdW50IHR5cGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2VKc29uPy5leHRyYURhdGFbZWxlbWVudC5pZF0/LmZidGRhdGE/LmFtb3VudF90eXBlID09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmJ0cHJpY2UgPSBmYnRwcmljZSAtIGVsZW1lbnRmYnQ/LmRpc2NvdW50O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmJ0cHJpY2UgPSBlbGVtZW50ZmJ0Py5kaXNjb3VudDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGN1cnJlbnRmYnQ/LmRpc2NvdW50ZWRfYW1vdW50ICE9IGZidHByaWNlIHx8IGN1cnJlbnRmYnQ/LmlkICE9IGVsZW1lbnRmYnQucHJvZHVjdF9pZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FydGRhdGEucHJvZHVjdHNbaW5kZXhdLmZidCA9IFtdXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Uuc3VjY2VzcyA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1lOiBhbnkgPSBlbGVtZW50Lm5hbWUgKyAnIGZidCBoYXMgYmVlbiBjaGFuZ2VkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLm1lc3NhZ2VzLnB1c2gobWUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2V0Q2FydChjYXJ0ZGF0YSlcclxuICAgICAgICAgICAgaWYocmVtb3ZlaWRzPy5sZW5ndGgpe1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHJlbW92ZWlkcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gcmVtb3ZlaWRzW2luZGV4XTtcclxuICAgICAgICAgICAgICAgICAgICByZW1vdmVDYXJ0SXRlbShlbGVtZW50KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIHJldHVybiByZXNwb25zZVxyXG59XHJcblxyXG5jb25zdCBnZXRQcm9kdWN0aWRzRHVwbGljYXRlID0gKGV4dHJhOiBib29sZWFuID0gZmFsc2UpID0+IHtcclxuICAgIHZhciBjYXJ0RGF0YSA9IGdldENhcnQoKTtcclxuICAgIHZhciBwcm9kdWN0aWRzOiBhbnkgPSBbXTtcclxuICAgIHZhciBwcm9kdWN0cHJpY2U6IGFueSA9IFtdO1xyXG4gICAgdmFyIHByb2R1Y3RxdHk6IGFueSA9IFtdO1xyXG4gICAgdmFyIHByb2R1Y3REYXRhOiBhbnkgPSBmYWxzZTtcclxuXHJcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY2FydERhdGEucHJvZHVjdHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcblxyXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjYXJ0RGF0YS5wcm9kdWN0c1tpbmRleF07XHJcbiAgICAgICAgLy8gcHJvZHVjdGlkcy5wdXNoKGVsZW1lbnQuaWQpXHJcbiAgICAgICAgLy8gcHJvZHVjdHByaWNlLnB1c2goZWxlbWVudC5wcmljZSlcclxuICAgICAgICAvLyBwcm9kdWN0cXR5LnB1c2goZWxlbWVudC5xdWFudGl0eSlcclxuXHJcbiAgICAgICAgLy8gaWYgKCFlbGVtZW50LmJvZ28pIHtcclxuICAgICAgICAgICAgcHJvZHVjdGlkcy5wdXNoKGVsZW1lbnQuaWQpXHJcbiAgICAgICAgICAgIHByb2R1Y3RwcmljZS5wdXNoKGVsZW1lbnQucHJpY2UpXHJcbiAgICAgICAgICAgIHByb2R1Y3RxdHkucHVzaChlbGVtZW50LnF1YW50aXR5KVxyXG4gICAgICAgICAgICBpZihlbGVtZW50Py5naWZ0KXtcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGVsZW1lbnQ/LmdpZnQubWFwKGZ1bmN0aW9uIChnOiBhbnkpIHsgcmV0dXJuIGcuaWQ7IH0pKTtcclxuICAgICAgICAgICAgICAgIHByb2R1Y3RpZHMgPSBwcm9kdWN0aWRzLmNvbmNhdChlbGVtZW50Py5naWZ0Lm1hcChmdW5jdGlvbiAoZzogYW55KSB7IHJldHVybiBnLmlkOyB9KSlcclxuICAgICAgICAgICAgICAgIHByb2R1Y3RwcmljZSA9IHByb2R1Y3RwcmljZS5jb25jYXQoZWxlbWVudD8uZ2lmdC5tYXAoZnVuY3Rpb24gKGc6IGFueSkgeyByZXR1cm4gZy5kaXNjb3VudGVkX2Ftb3VudDsgfSkpXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0cXR5ID0gcHJvZHVjdHF0eS5jb25jYXQoZWxlbWVudD8uZ2lmdC5tYXAoZnVuY3Rpb24gKGc6IGFueSkgeyByZXR1cm4gZy5xdWFudGl0eTsgfSkpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGVsZW1lbnQ/LmZidCkge1xyXG4gICAgICAgICAgICAgICAgcHJvZHVjdGlkcyA9IHByb2R1Y3RpZHMuY29uY2F0KGVsZW1lbnQ/LmZidC5tYXAoZnVuY3Rpb24gKGY6IGFueSkgeyByZXR1cm4gZi5pZDsgfSkpXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0cHJpY2UgPSBwcm9kdWN0cHJpY2UuY29uY2F0KGVsZW1lbnQ/LmZidC5tYXAoZnVuY3Rpb24gKGY6IGFueSkgeyByZXR1cm4gZi5kaXNjb3VudGVkX2Ftb3VudDsgfSkpXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0cXR5ID0gcHJvZHVjdHF0eS5jb25jYXQoZWxlbWVudD8uZmJ0Lm1hcChmdW5jdGlvbiAoZjogYW55KSB7IHJldHVybiBmLnF1YW50aXR5OyB9KSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIC8vIH1cclxuICAgIH1cclxuICAgIGlmIChleHRyYSkge1xyXG4gICAgICAgIHByb2R1Y3REYXRhID0ge1xyXG4gICAgICAgICAgICBpZDogcHJvZHVjdGlkcyxcclxuICAgICAgICAgICAgcXVhbnRpdHk6IHByb2R1Y3RxdHksXHJcbiAgICAgICAgICAgIHByaWNlOiBwcm9kdWN0cHJpY2VcclxuICAgICAgICB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBwcm9kdWN0RGF0YSA9IHtcclxuICAgICAgICAgICAgaWQ6IHByb2R1Y3RpZHNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcHJvZHVjdERhdGE7XHJcbn1cclxuXHJcbmNvbnN0IGdldFByb2R1Y3RpZHMgPSAoZXh0cmE6IGJvb2xlYW4gPSBmYWxzZSkgPT4ge1xyXG4gICAgdmFyIGNhcnREYXRhID0gZ2V0Q2FydCgpO1xyXG4gICAgdmFyIHByb2R1Y3RpZHM6IGFueSA9IFtdO1xyXG4gICAgdmFyIHByb2R1Y3RwcmljZTogYW55ID0gW107XHJcbiAgICB2YXIgcHJvZHVjdHF0eTogYW55ID0gW107XHJcbiAgICB2YXIgcHJvZHVjdERhdGE6IGFueSA9IGZhbHNlO1xyXG5cclxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXJ0RGF0YS5wcm9kdWN0cy5sZW5ndGg7IGluZGV4KyspIHtcclxuXHJcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGNhcnREYXRhLnByb2R1Y3RzW2luZGV4XTtcclxuICAgICAgICBpZiAoIWVsZW1lbnQuYm9nbykge1xyXG4gICAgICAgICAgICBwcm9kdWN0aWRzLnB1c2goZWxlbWVudC5pZClcclxuICAgICAgICAgICAgcHJvZHVjdHByaWNlLnB1c2goZWxlbWVudC5wcmljZSlcclxuICAgICAgICAgICAgcHJvZHVjdHF0eS5wdXNoKGVsZW1lbnQucXVhbnRpdHkpXHJcbiAgICAgICAgICAgIC8vIGlmKGVsZW1lbnQ/LmdpZnQpe1xyXG4gICAgICAgICAgICAvLyAgICAgLy8gY29uc29sZS5sb2coZWxlbWVudD8uZ2lmdC5tYXAoZnVuY3Rpb24gKGc6IGFueSkgeyByZXR1cm4gZy5pZDsgfSkpO1xyXG4gICAgICAgICAgICAvLyAgICAgcHJvZHVjdGlkcyA9IHByb2R1Y3RpZHMuY29uY2F0KGVsZW1lbnQ/LmdpZnQubWFwKGZ1bmN0aW9uIChnOiBhbnkpIHsgcmV0dXJuIGcuaWQ7IH0pKVxyXG4gICAgICAgICAgICAvLyAgICAgcHJvZHVjdHByaWNlID0gcHJvZHVjdHByaWNlLmNvbmNhdChlbGVtZW50Py5naWZ0Lm1hcChmdW5jdGlvbiAoZzogYW55KSB7IHJldHVybiBnLmRpc2NvdW50ZWRfYW1vdW50OyB9KSlcclxuICAgICAgICAgICAgLy8gICAgIHByb2R1Y3RxdHkgPSBwcm9kdWN0cXR5LmNvbmNhdChlbGVtZW50Py5naWZ0Lm1hcChmdW5jdGlvbiAoZzogYW55KSB7IHJldHVybiBnLnF1YW50aXR5OyB9KSlcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICBpZiAoZWxlbWVudD8uZmJ0KSB7XHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0aWRzID0gcHJvZHVjdGlkcy5jb25jYXQoZWxlbWVudD8uZmJ0Lm1hcChmdW5jdGlvbiAoZjogYW55KSB7IHJldHVybiBmLmlkOyB9KSlcclxuICAgICAgICAgICAgICAgIHByb2R1Y3RwcmljZSA9IHByb2R1Y3RwcmljZS5jb25jYXQoZWxlbWVudD8uZmJ0Lm1hcChmdW5jdGlvbiAoZjogYW55KSB7IHJldHVybiBmLmRpc2NvdW50ZWRfYW1vdW50OyB9KSlcclxuICAgICAgICAgICAgICAgIHByb2R1Y3RxdHkgPSBwcm9kdWN0cXR5LmNvbmNhdChlbGVtZW50Py5mYnQubWFwKGZ1bmN0aW9uIChmOiBhbnkpIHsgcmV0dXJuIGYucXVhbnRpdHk7IH0pKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKGV4dHJhKSB7XHJcbiAgICAgICAgcHJvZHVjdERhdGEgPSB7XHJcbiAgICAgICAgICAgIGlkOiBwcm9kdWN0aWRzLFxyXG4gICAgICAgICAgICBxdWFudGl0eTogcHJvZHVjdHF0eSxcclxuICAgICAgICAgICAgcHJpY2U6IHByb2R1Y3RwcmljZVxyXG4gICAgICAgIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHByb2R1Y3REYXRhID0ge1xyXG4gICAgICAgICAgICBpZDogcHJvZHVjdGlkc1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBwcm9kdWN0RGF0YTtcclxufVxyXG5cclxuY29uc3QgcHJvY2VlZFRvQ2hlY2tvdXQgPSBhc3luYyAoY2l0eSA9IGZhbHNlLCBsYW5nOiBhbnksIHVzZXJEZXZpY2U6IGFueSkgPT4ge1xyXG4gICAgdmFyIGNhcnRkYXRhOiBhbnkgPSBnZXRDYXJ0KCk7XHJcbiAgICB2YXIgcHJvaWQgPSBnZXRQcm9kdWN0aWRzKHRydWUpXHJcbiAgICB2YXIgc2V0RGF0YTogYW55ID0ge1xyXG4gICAgICAgIHVzZXJpZDogbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1c2VyaWRcIiksXHJcbiAgICAgICAgY2l0eTogY2l0eSA/IGNpdHkgOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImdsb2JhbGNpdHlcIiksXHJcbiAgICAgICAgY2FydGRhdGE6IGNhcnRkYXRhLFxyXG4gICAgICAgIHN1YnRvdGFsOiBnZXRTdWJ0b3RhbCgpLFxyXG4gICAgICAgIHNhdmVhbW91bnR0b3RhbDogZ2V0U2F2ZUFtb3VudCgpLFxyXG4gICAgICAgIHRvdGFsOiBnZXRUb3RhbCgpLFxyXG4gICAgICAgIGxhbmc6IGxhbmcsXHJcbiAgICAgICAgdXNlckRldmljZTogdXNlckRldmljZSxcclxuICAgICAgICBleHRyYWRhdGE6IGNhcnRkYXRhPy5leHRyYWRhdGEgPyBjYXJ0ZGF0YT8uZXh0cmFkYXRhIDogbnVsbCxcclxuICAgICAgICBhZmZpbGlhdGlvbkNvZGU6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiYWZmaWxpYXRpb25Db2RlXCIpLFxyXG4gICAgICAgIG1vYmlsZWFwcDogdHJ1ZSxcclxuICAgIH1cclxuICAgIHZhciByZXNwb25zZTogYW55ID0ge31cclxuICAgIGF3YWl0IHBvc3QoJ3N1Ym1pdE9yZGVyJywgc2V0RGF0YSkudGhlbigocmVzcG9uc2VKc29uOiBhbnkpID0+IHtcclxuICAgICAgICBjYXJ0ZGF0YSA9IGdldENhcnQoKVxyXG4gICAgICAgIGNhcnRkYXRhLm9yZGVySWQgPSByZXNwb25zZUpzb24ub3JkZXJfaWRcclxuICAgICAgICByZXNwb25zZSA9IHJlc3BvbnNlSnNvbi5yZWRpcmVjdGlvblxyXG4gICAgICAgIGlmICghbG9jYWxTdG9yYWdlPy5nZXRJdGVtKCdvcmRlcklkJykpIHtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlPy5zZXRJdGVtKCdvcmRlcklkJywgcmVzcG9uc2VKc29uLm9yZGVyX2lkKVxyXG4gICAgICAgIH1cclxuICAgICAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgICAgIGlmIChjYXJ0ZGF0YS5wYXltZW50TWV0aG9kID09ICdjb2QnKVxyXG4gICAgICAgICAgICByZW1vdmVDYXJ0KClcclxuICAgIH0pXHJcbiAgICByZXR1cm4gcmVzcG9uc2U7XHJcbn1cclxuXHJcbmNvbnN0IGdldE9yZGVySWQgPSAoKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGEgPSBnZXRDYXJ0KClcclxuICAgIHJldHVybiBjYXJ0ZGF0YS5vcmRlcklkO1xyXG59XHJcblxyXG5cclxuY29uc3Qgc2V0RXh0cmFGZWVzID0gYXN5bmMgKHBheW1lbnRNZXRob2Q6IGFueSA9IGZhbHNlKSA9PiB7XHJcbiAgICB2YXIgY2FydGRhdGE6IGFueSA9IGdldENhcnQoKTtcclxuICAgIHZhciBzZXREYXRhOiBhbnkgPSB7XHJcbiAgICAgICAgcGF5bWVudG1ldGhvZDogcGF5bWVudE1ldGhvZCA/IHBheW1lbnRNZXRob2QgOiBmYWxzZSxcclxuICAgICAgICAvL2Ftb3VudDogZ2V0U3VidG90YWwoKSxcclxuICAgICAgICBhbW91bnQ6IGdldFN1YnRvdGFsU2FsZSgpLFxyXG4gICAgfVxyXG4gICAgYXdhaXQgcG9zdCgnZ2V0ZmVlcycsIHNldERhdGEpLnRoZW4oKHJlc3BvbnNlSnNvbjogYW55KSA9PiB7XHJcbiAgICAgICAgY2FydGRhdGEuZmVlcy5mZWUgPSByZXNwb25zZUpzb24/LmRhdGFcclxuICAgICAgICBzZXRDYXJ0KGNhcnRkYXRhKVxyXG4gICAgfSlcclxuICAgIHJldHVybiBjYXJ0ZGF0YTtcclxufVxyXG5cclxuZXhwb3J0IHsgc2V0Q2FydEV4cGlyeSwgZ2V0Q2FydEl0ZW1zLCBzZXRDYXJ0SXRlbXMsIGdldFN1YnRvdGFsU2FsZSwgcmVjaGVja2NhcnRkYXRhLCBnZXRDYXJ0LCBnZXRDYXJ0Q291bnQsIGdldFN1bW1hcnksIHJlbW92ZUNhcnRJdGVtLCByZW1vdmVDYXJ0SXRlbUZidCwgdXBkYXRlQ2FydEl0ZW1GYnRRdHksIGluY3JlYXNlUXR5LCBzZXRTaGlwcGluZywgZ2V0UHJvZHVjdGlkcywgc2V0RGlzY291bnRSdWxlLCBzZXREaXNjb3VudFJ1bGVCb2dvLCBnZXRTaGlwcGluZ0FkZHJlc3MsIHNldFNoaXBwaW5nQWRkcmVzcywgc2V0UGF5bWVudE1ldGhvZCwgZ2V0UGF5bWVudE1ldGhvZCwgZ2V0UGF5bWVudE1ldGhvZFN0YXR1cywgZ2V0V3JhcHBlciwgdW5zZXRXcmFwcGVyLCBzZXRXcmFwcGVyLCBnZXRJbnN0YWxsYXRpb24sIHVuc2V0SW5zdGFsbGF0aW9uLCBzZXRJbnN0YWxsYXRpb24sIGdldENvdXBvbiwgc2V0Q291cG9uLCB1bnNldGNvdXBvbiwgcHJvY2VlZFRvQ2hlY2tvdXQsIGdldE9yZGVySWQsIHJlbW92ZUNhcnQsIGdldEV4cHJlc3NEZWxpdmVyeSwgc2V0RXhwcmVzc0RlbGl2ZXJ5LCB1bnNldEV4cHJlc3NEZWxpdmVyeSwgZ2V0RXhwcmVzc0RlbGl2ZXJ5RGF0YSwgZ2V0RG9vclN0ZXAsIHNldERvb3JTdGVwLCB1bnNldERvb3JTdGVwLCBnZXREb29yU3RlcERhdGEsIHNldEV4dHJhRmVlcywgZ2V0RXh0cmFGZWVzLCByZW1vdmVjaGVja291dGRhdGEsIHNldENhcnQsIGFkZGZidGV4dHJhaXRlbSwgZ2V0RXhwcmVzc0RlbGl2ZXJ5Q2FydCB9Il0sIm5hbWVzIjpbInBvc3QiLCJlbXB0eUNhcnQiLCJwcm9kdWN0cyIsImRpc2NvdW50cyIsImNvdXBvbiIsImRpc2N1b3VudFJ1bGVzIiwiYWRkaXRpb25hbERpc2NvdW50IiwiZmVlcyIsInNoaXBwaW5nIiwiZXhwcmVzcyIsImRvb3JzdGVwIiwiZmVlIiwid3JhcHBlciIsImluc3RhbGxhdGlvbiIsImV4dHJhZGF0YSIsInBheW1lbnRNZXRob2QiLCJzaGlwcGluZ0FkZHJlc3MiLCJvcmRlcklkIiwiY3JlYXRlQ2FydCIsImluaXRpYWxWYWx1ZXMiLCJPYmplY3QiLCJhc3NpZ24iLCJyZW1vdmVjaGVja291dGRhdGEiLCJjYXJ0ZGF0YSIsImdldENhcnQiLCJpbmRleCIsImxlbmd0aCIsInNldENhcnQiLCJnZXRDYXJ0SXRlbXMiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiZCIsImRlY29kZWRhdGEiLCJCdWZmZXIiLCJmcm9tIiwidG9TdHJpbmciLCJKU09OIiwicGFyc2UiLCJzZWFyY2hJdGVtIiwiYXJyYXkiLCJkYXRhIiwia2V5cyIsImZpbmQiLCJrZXkiLCJpZCIsInByaWNlIiwiZ2lmdCIsIm1hcCIsImEiLCJmaWx0ZXIiLCJlbGVtZW50IiwiaW5jbHVkZXMiLCJyZW1vdmVDYXJ0IiwicmVtb3ZlSXRlbSIsInJlbW92ZUNhcnRJdGVtIiwic3BsaWNlIiwic2V0RGlzY291bnRSdWxlIiwic2V0RGlzY291bnRSdWxlQm9nbyIsInJlbW92ZUNhcnRJdGVtRmJ0IiwicHJva2V5IiwiZmJ0a2V5IiwiZmJ0IiwidXBkYXRlQ2FydEl0ZW1GYnRRdHkiLCJxdHkiLCJxdWFudGl0eSIsInJlbW92ZUJvZ28iLCJib2dvIiwiY2FydGV4cGlyeSIsIkRhdGUiLCJub3ciLCJpbmNyZWFzZVF0eSIsInNldGRhdGEiLCJ0b3RhbF9xdWFudGl0eSIsImFkZEJvZ28iLCJjb25jYXQiLCJhZGRmYnRleHRyYWl0ZW0iLCJjaGVja3REYXRhIiwibmV3ZmJ0IiwiY2hlY2t0RGF0YWZidCIsInB1c2giLCJzZXRDYXJ0SXRlbXMiLCJNYXRoIiwicmFuZG9tIiwic2xpY2UiLCJzZXRDYXJ0RXhwaXJ5IiwiYWRkZXhwaXJ5dGltZSIsImNhY2hlRXhwaXJlRGF0ZSIsInNldEl0ZW0iLCJjYWNoZSIsIm15SlNPTiIsInN0cmluZ2lmeSIsIm9iakpzb25CNjQiLCJ3aW5kb3ciLCJkaXNwYXRjaEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJkZXRhaWwiLCJjYXJ0RGF0YSIsImdldENhcnRDb3VudCIsImNvdW50IiwiY2FsY3VsYXRlVGltZUxlZnQiLCJlbmRUaW1lIiwiZW5kIiwiZGlmZmVyZW5jZSIsImV4cGlyZWQiLCJob3VycyIsImZsb29yIiwibWludXRlcyIsInNlY29uZHMiLCJnZXRTdWJ0b3RhbCIsImFtb3VudCIsInJlZ3VsYXJfcHJpY2UiLCJnIiwiZWxlbWVudGdpZnQiLCJmIiwiZWxlbWVudGZidCIsImdldFN1YnRvdGFsU2FsZSIsImRpc2NvdW50ZWRfYW1vdW50IiwiZ2V0U2F2ZUFtb3VudCIsImdldERpc2NvdW50ZXMiLCJnZXRTaGlwcGluZ0FkZHJlc3MiLCJzZXRTaGlwcGluZ0FkZHJlc3MiLCJnZXRQYXltZW50TWV0aG9kIiwic2V0UGF5bWVudE1ldGhvZCIsImdldFNoaXBwaW5nIiwic2V0SW5zdGFsbGF0aW9uIiwiZmVlc2RhdGEiLCJ0aXRsZSIsInRpdGxlX2FyYWJpYyIsImdldEluc3RhbGxhdGlvbiIsInVuc2V0SW5zdGFsbGF0aW9uIiwic2V0V3JhcHBlciIsImdldFdyYXBwZXIiLCJ1bnNldFdyYXBwZXIiLCJzdW1tYXJ5IiwicGFyc2VGbG9hdCIsInRvRml4ZWQiLCJOdW1iZXIiLCJnZXRBZGRpdGlvbmFsRGlzY291bnQiLCJhbW91bnREYXRhIiwiZ2V0RXh0cmFGZWVzIiwiZ2V0VG90YWwiLCJ0b3RhbCIsImdldENvdXBvbiIsImdldEV4cHJlc3NEZWxpdmVyeSIsImdldERvb3JTdGVwIiwiZ2V0U3VtbWFyeSIsInNldFNoaXBwaW5nIiwiY2l0eSIsInByb2lkIiwiZ2V0UHJvZHVjdGlkcyIsInNldERhdGEiLCJ1c2VyaWQiLCJwcm9kdWN0aWRzIiwidGhlbiIsInJlc3BvbnNlSnNvbiIsInN1Y2Nlc3MiLCJuYW1lIiwibmFtZV9hcmFiaWMiLCJnZXRQYXltZW50TWV0aG9kU3RhdHVzIiwib3JkZXJhbW91bnQiLCJnZXRFeHByZXNzRGVsaXZlcnlDYXJ0IiwiZ2V0UHJvZHVjdGlkc0R1cGxpY2F0ZSIsInByb2R1Y3RfcXR5IiwiRVhkYXRhIiwiZ2V0RXhwcmVzc0RlbGl2ZXJ5RGF0YSIsInByb2R1Y3RxdHkiLCJwcmVwcm9jb3VudCIsInByZV9vcmRlciIsInVuc2V0RXhwcmVzc0RlbGl2ZXJ5Iiwic2V0RXhwcmVzc0RlbGl2ZXJ5IiwibnVtX29mX2RheXMiLCJhcHBsaWVkX2lkIiwidG90YWxRdHkiLCJpIiwiZWxtIiwicXVhbnRpdGllcyIsImFwcGxpZWRfcXR5cyIsImV4cHJlc3NfcXR5IiwiZXhwcmVzc190b3RhbF9xdHkiLCJnZXREb29yU3RlcERhdGEiLCJ1bnNldERvb3JTdGVwIiwic2V0RG9vclN0ZXAiLCJ1bnNldGNvdXBvbiIsInNldENvdXBvbiIsImNvZGUiLCJwcm9kdWN0cHJpY2UiLCJjb3Vwb25fY29kZSIsInBheW1lbnRtZXRob2QiLCJzdWJ0b3RhbCIsImRldmljZSIsInNldEFkZGl0aW9uYWxEaXNjb3VudCIsImRpc2NvdW50IiwidmFsaWRQcm9kdWN0cyIsInByb2R1Y3QiLCJ0b3RhbFF1YW50aXR5IiwicmVkdWNlIiwic3VtIiwiaGFzQnJhbmRDb25kaXRpb24iLCJzb21lIiwiYnJhbmQiLCJhZGp1c3RlZFF1YW50aXR5IiwidG90YWxQcmljZSIsInByb2R1Y3RXaXRoTG93ZXN0QW1vdW50IiwibG93ZXN0IiwiY3VycmVudCIsImxvd2VzdEFtb3VudCIsImN1cnJlbnRBbW91bnQiLCJyZW1haW5pbmdQcm9kdWN0cyIsInJlbWFpbmluZ1RvdGFsQW1vdW50IiwicmVtb3ZlZFByb2R1Y3RBbW91bnQiLCJhZGRkaXNjb3VudCIsImRpc2NvdW50VHlwZSIsImNhcnQiLCJidWxrIiwiZSIsInJlY2hlY2tjYXJ0ZGF0YSIsImxhbmciLCJyZXNwb25zZSIsIm1lc3NhZ2VzIiwicmVtb3ZlaWRzIiwiY2hlY2tkYXRhIiwibWUiLCJuZXdwcmljZSIsInNhbGVfcHJpY2UiLCJmbGFzaF9zYWxlX2V4cGlyeSIsImZsYXNoX3NhbGVfcHJpY2UiLCJ0aW1lciIsImV4dHJhRGF0YSIsImZyZWVnaWZ0RGF0YSIsImFsbG93ZWRfZ2lmdHMiLCJmYnRkYXRhIiwiZmJ0bGlzdCIsImN1cnJlbnRmYnQiLCJmYnRwcmljZSIsInByb2R1Y3RkZXRhaWwiLCJkaXNjb3VudF90eXBlIiwiYW1vdW50X3R5cGUiLCJwcm9kdWN0X2lkIiwiZXh0cmEiLCJwcm9kdWN0RGF0YSIsInByb2NlZWRUb0NoZWNrb3V0IiwidXNlckRldmljZSIsInNhdmVhbW91bnR0b3RhbCIsImFmZmlsaWF0aW9uQ29kZSIsIm1vYmlsZWFwcCIsIm9yZGVyX2lkIiwicmVkaXJlY3Rpb24iLCJnZXRPcmRlcklkIiwic2V0RXh0cmFGZWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/[lang]/cartstorage/cart.tsx\n"));

/***/ })

});